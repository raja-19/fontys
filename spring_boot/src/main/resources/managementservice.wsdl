<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions name="ManagementService" targetNamespace="http://www.everest.nl/aquima/studio/ManagementService/1.0"
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
	xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex"
	xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
	xmlns:wsa10="http://www.w3.org/2005/08/addressing"
	xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
	xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy"
	xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract"
	xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
	xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing"
	xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:tns="http://www.everest.nl/aquima/studio/ManagementService/1.0"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
	xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
	<wsp:Policy wsu:Id="BasicHttpBinding_ManagementService_policy">
		<wsp:ExactlyOne>
			<wsp:All>
				<http:BasicAuthentication
					xmlns:http="http://schemas.microsoft.com/ws/06/2004/policy/http"/>
				</wsp:All>
			</wsp:ExactlyOne>
		</wsp:Policy>
		<wsdl:types>
			<xsd:schema elementFormDefault="qualified" targetNamespace="http://www.everest.nl/aquima/studio/ManagementService/1.0">
				<xsd:element name="ImportSpecification">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="base64SpecificationString" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ImportSpecificationResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="ExecuteUnitTests">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="unittests" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ModuleKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ElementKey">
							<xsd:attribute name="ModuleType" type="tns:ModuleType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ElementKey" abstract="true">
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ProjectKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ElementKey"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="PackageKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ElementKey"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ModuleElementKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ElementKey">
							<xsd:attribute name="ModuleElementType" type="tns:ModuleElementType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="ModuleElementType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Asset"/>
						<xsd:enumeration value="Attribute"/>
						<xsd:enumeration value="BusinessRule"/>
						<xsd:enumeration value="Button"/>
						<xsd:enumeration value="Container"/>
						<xsd:enumeration value="ContentItem"/>
						<xsd:enumeration value="DashboardMenu"/>
						<xsd:enumeration value="DashboardPage"/>
						<xsd:enumeration value="DataMapping"/>
						<xsd:enumeration value="DataRule"/>
						<xsd:enumeration value="DecisionTable"/>
						<xsd:enumeration value="DecisionTree"/>
						<xsd:enumeration value="Document"/>
						<xsd:enumeration value="Entity"/>
						<xsd:enumeration value="ERDiagram"/>
						<xsd:enumeration value="ExternalRule"/>
						<xsd:enumeration value="Flow"/>
						<xsd:enumeration value="FlowEvent"/>
						<xsd:enumeration value="Image"/>
						<xsd:enumeration value="Instance"/>
						<xsd:enumeration value="Page"/>
						<xsd:enumeration value="Process"/>
						<xsd:enumeration value="ProcessEvent"/>
						<xsd:enumeration value="ProcessTask"/>
						<xsd:enumeration value="Relation"/>
						<xsd:enumeration value="ReusableExpression"/>
						<xsd:enumeration value="RuleGroup"/>
						<xsd:enumeration value="ServiceCall"/>
						<xsd:enumeration value="SpecificationDocument"/>
						<xsd:enumeration value="SpecificationImplementation"/>
						<xsd:enumeration value="TaskMapping"/>
						<xsd:enumeration value="TextItem"/>
						<xsd:enumeration value="UnitTest"/>
						<xsd:enumeration value="ValidationRule"/>
						<xsd:enumeration value="ValueList"/>
						<xsd:enumeration value="SoapService"/>
						<xsd:enumeration value="SchemaSet"/>
						<xsd:enumeration value="WebService"/>
						<xsd:enumeration value="RestService"/>
						<xsd:enumeration value="MessageEvent"/>
						<xsd:enumeration value="RoutingAlgorithm"/>
						<xsd:enumeration value="PriorityAlgorithm"/>
						<xsd:enumeration value="AuthorizationAlgorithm"/>
						<xsd:enumeration value="DomainSchema"/>
						<xsd:enumeration value="Aggregate"/>
						<xsd:enumeration value="FunctionCall"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="AttributeKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElementKey">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entity" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="InstanceKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElementKey">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entity" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RelationKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElementKey">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entity" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="SpecificationImplementationKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElementKey">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SpecificationDocument" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="GlobalElementKey">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ElementKey">
							<xsd:attribute name="GlobalElementType" type="tns:GlobalElementType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="GlobalElementType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="AssetType"/>
						<xsd:enumeration value="Channel"/>
						<xsd:enumeration value="ContainerType"/>
						<xsd:enumeration value="ContentStyle"/>
						<xsd:enumeration value="FlowType"/>
						<xsd:enumeration value="Format"/>
						<xsd:enumeration value="Mask"/>
						<xsd:enumeration value="MaskType"/>
						<xsd:enumeration value="PresentationStyle"/>
						<xsd:enumeration value="Role"/>
						<xsd:enumeration value="ProcessType"/>
						<xsd:enumeration value="Resource"/>
						<xsd:enumeration value="ServiceType"/>
						<xsd:enumeration value="ValidationRuleType"/>
						<xsd:enumeration value="CustomSchemaElement"/>
						<xsd:enumeration value="Team"/>
						<xsd:enumeration value="PortalMessage"/>
						<xsd:enumeration value="Parameter"/>
						<xsd:enumeration value="FieldType"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:simpleType name="ModuleType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Interaction"/>
						<xsd:enumeration value="Configuration"/>
						<xsd:enumeration value="Process"/>
						<xsd:enumeration value="Specification"/>
						<xsd:enumeration value="Contract"/>
						<xsd:enumeration value="Dashboard"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfString">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="ExecuteUnitTestsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExecuteUnitTestsResult" type="tns:UnitTestExecutionResponse"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="UnitTestExecutionResponse">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="Succeeded" type="xsd:boolean"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfUnitTestReport"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfUnitTestReport">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="UnitTestReport" nillable="true" type="tns:UnitTestReport"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="UnitTestReport">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="UnitTestName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ProfileResults" type="tns:ArrayOfProfileResult"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProfileResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ProfileResult" nillable="true" type="tns:ProfileResult"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProfileResult">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="ProfileId" type="xsd:int"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="UnitTestResult" type="tns:UnitTestResult"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="UnitTestResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ErrorMessages" type="tns:ArrayOfUnitTestErrorMessage"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ExpectedValue" type="tns:ArrayOfString"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="SourcedValue" type="tns:ArrayOfString"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="Succeeded" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfUnitTestErrorMessage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="UnitTestErrorMessage" nillable="true" type="tns:UnitTestErrorMessage"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="UnitTestErrorMessage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ErrorLevel" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Message" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ElementName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ElementType" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="ExecuteUnitTestsForRevision">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="unittests" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExecuteUnitTestsForRevisionResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExecuteUnitTestsForRevisionResult" type="tns:UnitTestExecutionResponse"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExecuteAllUnitTests">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExecuteAllUnitTestsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExecuteAllUnitTestsResult" type="tns:UnitTestExecutionResponse"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExecuteAllUnitTestsForRevision">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExecuteAllUnitTestsForRevisionResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExecuteAllUnitTestsForRevisionResult" type="tns:UnitTestExecutionResponse"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportAllUnitTestCoverage">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportAllUnitTestCoverageResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportAllUnitTestCoverageResult" type="tns:UnitTestCoverageResponse"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="UnitTestCoverageResponse">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ProjectCoverage" type="tns:ArrayOfProjectCoverage"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProjectCoverage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ProjectCoverage" nillable="true" type="tns:ProjectCoverage"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProjectCoverage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ProjectName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:ModuleKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="UnitTestData" type="tns:ArrayOfUnitTestData"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfUnitTestData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="UnitTestData" nillable="true" type="tns:UnitTestData"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="UnitTestData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="UnitTestName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="DecisionTableData" type="tns:ArrayOfDecisionTableData"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="BusinessRuleData" type="tns:ArrayOfBusinessRuleData"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ExpressionData" type="tns:ArrayOfExpressionData"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDecisionTableData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="DecisionTableData" nillable="true" type="tns:DecisionTableData"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DecisionTableData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Name" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ConditionIds" type="tns:ArrayOfInt"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="Passed" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInt">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="int" type="xsd:int"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfBusinessRuleData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="BusinessRuleData" nillable="true" type="tns:BusinessRuleData"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="BusinessRuleData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Name" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="Passed" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfExpressionData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ExpressionData" nillable="true" type="tns:ExpressionData"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ExpressionData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Name" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="RetrieveSubscriptionStatus">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="RetrieveSubscriptionStatusResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="RetrieveSubscriptionStatusResult" type="tns:SubscriptionStatus"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="SubscriptionStatus">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Subscribers" type="tns:ArrayOfUserSubscription"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfUserSubscription">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="UserSubscription" nillable="true" type="tns:UserSubscription"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="UserSubscription">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="UserName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="SessionId" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="TimeOfLastAction" type="xsd:dateTime"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetDataSource">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="path" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetDataSourceResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetDataSourceResult" type="tns:DataSourceInformation"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="DataSourceInformation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ContentType" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="SuggestedFilename" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="BackupLocation" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="SetDataSource">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="path" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="SetDataSourceResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="SetDataSourceResult" type="tns:DataSourceInformation"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="RetrieveLog">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="1" maxOccurs="1" name="length" type="xsd:int"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="RetrieveLogResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="RetrieveLogResult" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="SendMessage">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="textMessage" type="tns:TextMessage"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="TextMessage">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Message">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="Text" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Message" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Key" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Parameters" type="tns:ArrayOfString"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="SendMessageResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="Logout">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="sessionId" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="LogoutResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="RetrieveServerInformation">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="RetrieveServerInformationResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="RetrieveServerInformationResult" type="tns:ServerInformation"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ServerInformation">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="StartedAt" type="xsd:dateTime"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="StartupTime" type="xsd:double"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="BuildVersion" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="BuildDate" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="RuntimeVersion" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Hostname" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Domainname" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetCurrentIdentity">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="GetCurrentIdentityResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetCurrentIdentityResult" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="IsInRole">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="userRole" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="IsInRoleResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="1" maxOccurs="1" name="IsInRoleResult" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="HasModuleWriteAccess">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="HasModuleWriteAccessResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="1" maxOccurs="1" name="HasModuleWriteAccessResult" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetLicenseData">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="GetLicenseDataResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetLicenseDataResult" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetBranches">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetBranchesResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetBranchesResult" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetBranchResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetBranchResult" type="tns:Branch"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="Branch">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element">
							<xsd:attribute name="BranchType" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Element" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FunctionalName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Description" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Comments" type="tns:ArrayOfComment"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Tags" type="tns:ArrayOfTag"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfComment">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Comment" type="tns:Comment"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Comment">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="User" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Subject" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Text" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="CreationDate" type="xsd:dateTime" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfTag">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Tag" type="tns:Tag"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Tag">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Repository">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="BranchType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Project">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Configuration" type="tns:ProjectConfiguration"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Languages" type="tns:ArrayOfProjectLanguage"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProjectConfiguration" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="References" type="tns:ArrayOfString3"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString3">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Reference" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="RunConfiguration">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProjectConfiguration">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ImplementationModules" type="tns:ArrayOfString17"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ConfigurationModules" type="tns:ArrayOfString18"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ContractModules" type="tns:ArrayOfString19"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExternalContractModules" type="tns:ArrayOfString20"/>
							</xsd:sequence>
							<xsd:attribute name="RootModule" type="xsd:string"/>
							<xsd:attribute name="ProcessModule" type="xsd:string"/>
							<xsd:attribute name="SpecificationModule" type="xsd:string"/>
							<xsd:attribute name="DefaultLanguage" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString17">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ImplementationModule" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString18">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ConfigurationModule" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString19">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ContractModule" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString20">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ExternalContractModule" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="InternalLibraryConfiguration">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProjectConfiguration">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Documents" type="tns:ArrayOfLibraryDocument"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Version" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReleaseNotes" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfLibraryDocument">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Document" type="tns:LibraryDocument"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="LibraryDocument">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Data" type="xsd:base64Binary"/>
					</xsd:sequence>
					<xsd:attribute name="FileName" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ExternalLibraryConfiguration">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProjectConfiguration">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Data" type="xsd:base64Binary"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Metadata" type="tns:ExternalLibraryMetadata"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ExternalLibraryMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Documents" type="tns:ArrayOfString16"/>
					</xsd:sequence>
					<xsd:attribute name="DevelopmentName" type="xsd:string"/>
					<xsd:attribute name="Version" type="xsd:string"/>
					<xsd:attribute name="ReleaseNotes" type="xsd:string"/>
					<xsd:attribute name="Signature" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString16">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Document" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DashboardConfiguration">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProjectConfiguration">
							<xsd:attribute name="DashboardModule" type="xsd:string"/>
							<xsd:attribute name="EntryPage" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProjectLanguage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Language" type="tns:ProjectLanguage"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProjectLanguage">
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Dialect" type="xsd:string"/>
					<xsd:attribute name="Code" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="LibraryPackage">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Projects" type="tns:ArrayOfString15"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString15">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Project" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Module">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Includes" type="tns:ArrayOfString9"/>
							</xsd:sequence>
							<xsd:attribute name="ModuleType" type="tns:ModuleType" use="required"/>
							<xsd:attribute name="ContractType" type="tns:ContractType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString9">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Include" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="ContractType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="ExternalFlow"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ModuleElement" abstract="true">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Container">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParameterContent" type="tns:ParameterContent"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayName" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Channels" type="tns:ArrayOfString6"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MappedEvents" type="tns:ArrayOfEventDefinitionImplementation"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CustomEvents" type="tns:ArrayOfEventImplementation"/>
							</xsd:sequence>
							<xsd:attribute name="ContentStyle" type="xsd:string"/>
							<xsd:attribute name="ContainerType" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ParameterContent" abstract="true"/>
				<xsd:complexType name="DefaultContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParameterValues" type="tns:ArrayOfParameterValue"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Containments" type="tns:ArrayOfContainment"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfParameterValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ParameterValue" type="tns:ParameterValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ParameterValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfParameterValueValueItem"/>
					</xsd:sequence>
					<xsd:attribute name="Parameter" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfParameterValueValueItem">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ValueItem">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="xsd:string"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Module" type="tns:ModuleKey"/>
								</xsd:sequence>
								<xsd:attribute name="Key" type="xsd:string"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfContainment">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Containment" type="tns:Containment"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Containment" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PreCondition" type="tns:Expression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Expression">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="RepeatExpression">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Expression">
							<xsd:attribute name="RepeatValueTargetEntity" type="xsd:string"/>
							<xsd:attribute name="RepeatValueTargetAttribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="SortableRepeatExpression">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:RepeatExpression">
							<xsd:attribute name="Sorting" type="tns:SortingType"/>
							<xsd:attribute name="OrderByEntity" type="xsd:string"/>
							<xsd:attribute name="OrderByAttribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="SortingType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Ascending"/>
						<xsd:enumeration value="Descending"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="GlobalParameterExpression">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Expression">
							<xsd:attribute name="ParameterName" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FormatContainment" abstract="true">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Containment">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ArrayOfFormatContainmentPresentationStyle"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFormatContainmentPresentationStyle">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="PresentationStyle">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
								</xsd:sequence>
								<xsd:attribute name="Name" type="xsd:string"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FieldTypeFormatDefinition">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AttributeReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReadOnly" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Required" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
							<xsd:attribute name="DisplayLength" type="xsd:int"/>
							<xsd:attribute name="Refresh" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="InlineFieldReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReadOnly" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Required" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PrimitiveParameterValues" type="tns:ArrayOfGlobalParameterValue"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TextParameterValues" type="tns:ArrayOfGlobalParameterValue1"/>
							</xsd:sequence>
							<xsd:attribute name="FieldName" type="xsd:string"/>
							<xsd:attribute name="FieldType" type="xsd:string"/>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
							<xsd:attribute name="DisplayLength" type="xsd:int"/>
							<xsd:attribute name="Refresh" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfGlobalParameterValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="PrimitiveParameterValue" type="tns:GlobalParameterValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="GlobalParameterValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="GlobalParameterName" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="GlobalParameterType" type="tns:GlobalParameterType"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:GlobalParameterExpression"/>
					</xsd:sequence>
					<xsd:attribute name="ContentItem" type="xsd:string"/>
				</xsd:complexType>
				<xsd:simpleType name="GlobalParameterType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Primitive"/>
						<xsd:enumeration value="Text"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfGlobalParameterValue1">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="TextParameterValue" type="tns:GlobalParameterValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ButtonReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReadOnly" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ButtonEvent" type="tns:ButtonEvent"/>
							</xsd:sequence>
							<xsd:attribute name="Button" type="xsd:string"/>
							<xsd:attribute name="Refresh" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ButtonEvent">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventImplementation" type="tns:EventImplementation"/>
					</xsd:sequence>
					<xsd:attribute name="Action" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="EventImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
					</xsd:sequence>
					<xsd:attribute name="FlowEvent" type="xsd:string"/>
					<xsd:attribute name="EventType" type="tns:FlowEventType" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString7">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EventParameter" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="FlowEventType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Commit"/>
						<xsd:enumeration value="Rollback"/>
						<xsd:enumeration value="CommitSkipValidate"/>
						<xsd:enumeration value="Exception"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ContainerContainment">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReadOnly" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Container" type="tns:Container"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RepeatExpression" type="tns:SortableRepeatExpression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ListFormatDefinition">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AggregateListItemReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContainerReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReadOnly" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RepeatExpression" type="tns:SortableRepeatExpression"/>
							</xsd:sequence>
							<xsd:attribute name="Container" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RelationReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReadOnly" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Required" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Relation" type="xsd:string"/>
							<xsd:attribute name="Container" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContentItemReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:attribute name="ContentItem" type="xsd:string"/>
							<xsd:attribute name="ContentStyle" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ImageReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:attribute name="Image" type="xsd:string"/>
							<xsd:attribute name="ContentStyle" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="TextItemReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment">
							<xsd:attribute name="TextItem" type="xsd:string"/>
							<xsd:attribute name="ContentStyle" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ValueListItemReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FormatContainment"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AssetReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Containment">
							<xsd:attribute name="Asset" type="xsd:string"/>
							<xsd:attribute name="Format" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="PortalMessageListenerContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfPortalMessageMapping1"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfPortalMessageMapping1">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:PortalMessageMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="PortalMessageMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PortalMessage" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FieldMappings" type="tns:ArrayOfPortalMessageFieldMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfPortalMessageFieldMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="FieldMapping" type="tns:PortalMessageFieldMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="PortalMessageFieldMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Field" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entity" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Attribute" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="InstanceLinkerContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Attributes" type="tns:ArrayOfString11"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Required" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReadOnly" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Selection" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ArrayOfString12"/>
							</xsd:sequence>
							<xsd:attribute name="SortOrder" type="xsd:string"/>
							<xsd:attribute name="SortAttribute" type="xsd:string"/>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Refresh" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString11">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Attribute" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString12">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="PresentationStyle" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="WorkListContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfWorkListEntry"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ListFormatDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="PagingSize" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetEntity" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="TaskIdTargetEntity" type="xsd:string"/>
							<xsd:attribute name="TaskIdTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="DisplayText" type="xsd:string"/>
							<xsd:attribute name="ShowTasks" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ShowStartedTasks" type="xsd:boolean" use="required"/>
							<xsd:attribute name="GroupByCase" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfWorkListEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:WorkListEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="WorkListEntry" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Visible" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Header" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ActionEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:WorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ListFormatDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="Button" type="xsd:string"/>
							<xsd:attribute name="Event" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:WorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FilterSettings">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Operator" type="tns:DataFilterOperator" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="DataFilterOperator">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Equals"/>
						<xsd:enumeration value="NotEquals"/>
						<xsd:enumeration value="LessThan"/>
						<xsd:enumeration value="LessThanOrEqual"/>
						<xsd:enumeration value="GreaterThan"/>
						<xsd:enumeration value="GreaterThanOrEqual"/>
						<xsd:enumeration value="Like"/>
						<xsd:enumeration value="NotLike"/>
						<xsd:enumeration value="In"/>
						<xsd:enumeration value="NotIn"/>
						<xsd:enumeration value="Contains"/>
						<xsd:enumeration value="NotContains"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="DisplayData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ListFormatDefinition"/>
					</xsd:sequence>
					<xsd:attribute name="OrderBy" type="tns:OrderOption" use="required"/>
					<xsd:attribute name="Mask" type="xsd:string"/>
				</xsd:complexType>
				<xsd:simpleType name="OrderOption">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="None"/>
						<xsd:enumeration value="Ascending"/>
						<xsd:enumeration value="Descending"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="TaskDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:WorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="TaskDataType" type="tns:TaskDataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="TaskDataType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Assignee"/>
						<xsd:enumeration value="Description"/>
						<xsd:enumeration value="TimeoutDate"/>
						<xsd:enumeration value="Name"/>
						<xsd:enumeration value="DisplayName"/>
						<xsd:enumeration value="StartDate"/>
						<xsd:enumeration value="Status"/>
						<xsd:enumeration value="Role"/>
						<xsd:enumeration value="Team"/>
						<xsd:enumeration value="DueDate"/>
						<xsd:enumeration value="Priority"/>
						<xsd:enumeration value="CaseId"/>
						<xsd:enumeration value="Required"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="CustomFieldEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:WorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="CustomField" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfDcmWorkListEntry"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStylesLocked" type="tns:ListFormatDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="PagingSize" type="xsd:string"/>
							<xsd:attribute name="CaseAggregate" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetEntity" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="TaskIdTargetEntity" type="xsd:string"/>
							<xsd:attribute name="TaskIdTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="DisplayText" type="xsd:string"/>
							<xsd:attribute name="ShowTasks" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ShowStartedTasks" type="xsd:boolean" use="required"/>
							<xsd:attribute name="GroupByCase" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDcmWorkListEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:DcmWorkListEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListEntry" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Visible" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Header" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListActionEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ListFormatDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="Button" type="xsd:string"/>
							<xsd:attribute name="Event" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListTaskDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="TaskDataType" type="tns:TaskDataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListCustomFieldEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="CustomField" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListCaseMetadataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="Field" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWorkListDossierMetadataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWorkListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
							<xsd:attribute name="Field" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="DataType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Boolean"/>
						<xsd:enumeration value="String"/>
						<xsd:enumeration value="Number"/>
						<xsd:enumeration value="Date"/>
						<xsd:enumeration value="DateTime"/>
						<xsd:enumeration value="Percentage"/>
						<xsd:enumeration value="Currency"/>
						<xsd:enumeration value="Integer"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="DcmCaseListContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfDcmCaseListEntry"/>
							</xsd:sequence>
							<xsd:attribute name="PagingSize" type="xsd:string"/>
							<xsd:attribute name="CaseAggregate" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetEntity" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="GroupByEntity" type="xsd:string"/>
							<xsd:attribute name="GroupByAttribute" type="xsd:string"/>
							<xsd:attribute name="DisplayText" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDcmCaseListEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:DcmCaseListEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DcmCaseListEntry" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Visible" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Header" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="DcmCaseListActionEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmCaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ListFormatDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="Button" type="xsd:string"/>
							<xsd:attribute name="Event" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmCaseListDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmCaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmCaseListCaseDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmCaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="CaseDataType" type="tns:CaseDataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="CaseDataType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Name"/>
						<xsd:enumeration value="CreationDate"/>
						<xsd:enumeration value="DisplayName"/>
						<xsd:enumeration value="Id"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="DcmCaseListCaseMetadataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmCaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="Field" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmCaseListDossierMetadataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmCaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
							<xsd:attribute name="Field" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AggregateListContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfAggregateListEntry"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SearchQuery" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="AggregateType" type="xsd:string"/>
							<xsd:attribute name="EmptyText" type="xsd:string"/>
							<xsd:attribute name="TargetEntity" type="xsd:string"/>
							<xsd:attribute name="TargetAttribute" type="xsd:string"/>
							<xsd:attribute name="TargetVersionEntity" type="xsd:string"/>
							<xsd:attribute name="TargetVersionAttribute" type="xsd:string"/>
							<xsd:attribute name="ShowLatestVersionOnly" type="xsd:boolean" use="required"/>
							<xsd:attribute name="PagingSize" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfAggregateListEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:AggregateListEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="AggregateListEntry" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Visible" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Header" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="AggregateListActionEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:AggregateListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationData" type="tns:AggregateListItemReference"/>
							</xsd:sequence>
							<xsd:attribute name="Button" type="xsd:string"/>
							<xsd:attribute name="Event" type="xsd:string"/>
							<xsd:attribute name="EventType" type="tns:FlowEventType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AggregateListMetaDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:AggregateListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationData" type="tns:ExtendedPresentationData"/>
							</xsd:sequence>
							<xsd:attribute name="Field" type="tns:MetaDataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ExtendedPresentationData">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ArrayOfFilteredPresentationStyle"/>
					</xsd:sequence>
					<xsd:attribute name="OrderBy" type="tns:OrderOption" use="required"/>
					<xsd:attribute name="Mask" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFilteredPresentationStyle">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="PresentationStyle" type="tns:FilteredPresentationStyle"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FilteredPresentationStyle">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Filter" type="tns:FilterSettings"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:simpleType name="MetaDataType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="ID"/>
						<xsd:enumeration value="Name"/>
						<xsd:enumeration value="DisplayName"/>
						<xsd:enumeration value="CreationDate"/>
						<xsd:enumeration value="CreatedByUsername"/>
						<xsd:enumeration value="CreatedByID"/>
						<xsd:enumeration value="LastUpdated"/>
						<xsd:enumeration value="LastUpdatedByID"/>
						<xsd:enumeration value="LastUpdatedByUsername"/>
						<xsd:enumeration value="Version"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="AggregateListCustomMetaDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:AggregateListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationData" type="tns:ExtendedPresentationData"/>
							</xsd:sequence>
							<xsd:attribute name="Field" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CaseListContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfCaseListEntry"/>
							</xsd:sequence>
							<xsd:attribute name="PagingSize" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetEntity" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="GroupByEntity" type="xsd:string"/>
							<xsd:attribute name="GroupByAttribute" type="xsd:string"/>
							<xsd:attribute name="DisplayText" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfCaseListEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:CaseListEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="CaseListEntry" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Visible" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Header" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="CaseListActionEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:CaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:ListFormatDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="Button" type="xsd:string"/>
							<xsd:attribute name="Event" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CaseListDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:CaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CaseListCaseDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:CaseListEntry">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayData" type="tns:DisplayData"/>
							</xsd:sequence>
							<xsd:attribute name="CaseDataType" type="tns:CaseDataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DashboardFlowWidgetContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FlowModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Flow" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MappingModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Mapping" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MessageMappings" type="tns:ArrayOfPortalMessageMapping"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfPortalMessageMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="PortalMessageMapping" type="tns:PortalMessageMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DashboardTimelineContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseId" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayPeriod" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Connections" type="tns:ArrayOfString10"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="UserId" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="ShowCases" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ShowTasks" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ShowMessageEvents" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ShowDocuments" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ShowEntriesForUnknownConnections" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString10">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Connection" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="StatisticProcessContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfStatisticProcessEntry"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfStatisticProcessEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:StatisticProcessEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="StatisticProcessEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
					<xsd:attribute name="Operator" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="StatisticAggregateContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfStatisticAggregateEntry"/>
							</xsd:sequence>
							<xsd:attribute name="AggregateType" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfStatisticAggregateEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:StatisticAggregateEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="StatisticAggregateEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="MetadataType" type="xsd:string"/>
					<xsd:attribute name="Metadata" type="xsd:string"/>
					<xsd:attribute name="Operator" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ExternalFlowContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParameterContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Connection" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ContractModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ConfigurationModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ContractMappedEvents" type="tns:ArrayOfContractEventDefinitionImplementation"/>
							</xsd:sequence>
							<xsd:attribute name="DataMapping" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfContractEventDefinitionImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ContractMappedEvent" type="tns:ContractEventDefinitionImplementation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ContractEventDefinitionImplementation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:EventDefinitionImplementation">
							<xsd:attribute name="EventType" type="tns:FlowEventType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="EventDefinitionImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventParameters" type="tns:ArrayOfString7"/>
					</xsd:sequence>
					<xsd:attribute name="EventDefinition" type="xsd:string"/>
					<xsd:attribute name="FlowEvent" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfMultiLingualText">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Text" type="tns:MultiLingualText"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="MultiLingualText">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="Language" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString1">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Role" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString6">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Channel" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfEventDefinitionImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="MappedEvent" type="tns:EventDefinitionImplementation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfEventImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="CustomEvent" type="tns:EventImplementation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SoapService">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Wsdls" type="tns:ArrayOfWsdl"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MainWsdl" type="xsd:string"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="WsiCompliant" type="xsd:boolean"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="SoapVersion" type="tns:SoapVersion"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetNamespace" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Location" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SchemaSet" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Operations" type="tns:ArrayOfSoapServiceOperation"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfWsdl">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Wsdl" type="tns:Wsdl"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Wsdl">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetNamespace" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Content" type="xsd:base64Binary"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Includes" type="tns:ArrayOfString9"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="SoapVersion">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Soap_1_1"/>
						<xsd:enumeration value="Soap_1_2"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfSoapServiceOperation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Operation">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="xsd:string"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Action" type="xsd:string"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RequestMessage" type="tns:SoapServiceMessage"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ResponseMessage" type="tns:SoapServiceMessage"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SoapServiceMessage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Header" type="tns:ArrayOfSoapServiceMessagePart"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Body" type="tns:ArrayOfSoapServiceMessagePart"/>
					</xsd:sequence>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="Wsdl" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfSoapServiceMessagePart">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Part" type="tns:SoapServiceMessagePart"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SoapServiceMessagePart">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ElementReference" type="tns:ElementRef"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TypeReference" type="tns:XsdTypeReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
					<xsd:attribute name="Relation" type="xsd:string"/>
					<xsd:attribute name="Wsdl" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ElementRef">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Element" type="tns:QualifiedName"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParameterValues" type="tns:ArrayOfParameterValue"/>
					</xsd:sequence>
					<xsd:attribute name="CustomSchemaElement" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="QualifiedName">
					<xsd:attribute name="Namespace" type="xsd:string"/>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="XsdTypeReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ComplexType" type="tns:QualifiedName"/>
					</xsd:sequence>
					<xsd:attribute name="SimpleType" type="tns:DataType"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfValidationRuleReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ValidationRule" type="tns:ValidationRuleReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ValidationRuleReference" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Message" type="tns:ArrayOfMultiLingualText"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ExpressionReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ValidationRuleReference">
							<xsd:attribute name="ValidationRule" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="TypeReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ValidationRuleReference">
							<xsd:attribute name="Type" type="xsd:string"/>
							<xsd:attribute name="Parameters" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="WebService">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Module" type="tns:ModuleKey"/>
								<xsd:choice minOccurs="1" maxOccurs="1">
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RestService" type="tns:RestServiceConfiguration"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SoapService" type="tns:SoapServiceConfiguration"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RestServiceConfiguration">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:WebServiceConfiguration">
							<xsd:attribute name="RestService" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="WebServiceConfiguration" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Operations" type="tns:ArrayOfWebServiceConfigurationOperation"/>
					</xsd:sequence>
					<xsd:attribute name="Validate" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfWebServiceConfigurationOperation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Operation">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Operation" type="xsd:string"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Flow" type="xsd:string"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Mapping" type="xsd:string"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SoapServiceConfiguration">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:WebServiceConfiguration">
							<xsd:attribute name="SoapService" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RestService">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Operations" type="tns:ArrayOfRestOperation"/>
							</xsd:sequence>
							<xsd:attribute default="Both" name="Direction">
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="Both"/>
										<xsd:enumeration value="Incoming"/>
										<xsd:enumeration value="Outgoing"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
							<xsd:attribute name="Location" type="xsd:string"/>
							<xsd:attribute name="SchemaSet" type="xsd:string"/>
							<xsd:attribute name="CommunicationType" type="tns:CommunicationType"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfRestOperation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Operation" type="tns:RestOperation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="RestOperation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Documentation" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RequestMessage" type="tns:RestRequestMessage"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ResponseMessage" type="tns:RestMessage"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="RestRequestMessage">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:RestMessage">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Fragments" type="tns:ArrayOfRestUrnFragment"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Arguments" type="tns:ArrayOfRestUrnArgument"/>
							</xsd:sequence>
							<xsd:attribute name="HttpMethod" use="required">
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="Get"/>
										<xsd:enumeration value="Post"/>
										<xsd:enumeration value="Put"/>
										<xsd:enumeration value="Delete"/>
										<xsd:enumeration value="Patch"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RestMessage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="BodyElement" type="tns:ElementRef"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Headers" type="tns:ArrayOfRestHeader"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="BodyAttribute" type="xsd:string"/>
					<xsd:attribute name="BodyRelation" type="xsd:string"/>
					<xsd:attribute name="DomainSchema" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfRestHeader">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Header" type="tns:RestHeader"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="RestHeader">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfRestUrnFragment">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Fragment" type="tns:RestUrnFragment"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="RestUrnFragment">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="Type" type="tns:RestUrnFragmentType" use="required"/>
					<xsd:attribute name="Constant" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
				</xsd:complexType>
				<xsd:simpleType name="RestUrnFragmentType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Constant"/>
						<xsd:enumeration value="Dynamic"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfRestUrnArgument">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Argument" type="tns:RestUrnArgument"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="RestUrnArgument">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Type" type="tns:RestUrnArgumentType" use="required"/>
					<xsd:attribute name="Constant" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
					<xsd:attribute default="true" name="Required" type="xsd:boolean"/>
				</xsd:complexType>
				<xsd:simpleType name="RestUrnArgumentType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Constant"/>
						<xsd:enumeration value="Dynamic"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:simpleType name="CommunicationType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Xsd"/>
						<xsd:enumeration value="DomainSchema"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="SchemaSet">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Schemas" type="tns:ArrayOfSchema"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfSchema">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Schema" type="tns:Schema"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Schema">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetNamespace" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="ElementFormDefault" type="tns:SchemaForm"/>
						<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="AttributeFormDefault" type="tns:SchemaForm"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Content" type="xsd:base64Binary"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Includes" type="tns:ArrayOfString9"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Elements" type="tns:ArrayOfElementMapping"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Types" type="tns:ArrayOfTypeMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="SchemaForm">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Unqualified"/>
						<xsd:enumeration value="Qualified"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfElementMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Element" type="tns:ElementMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ElementMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TypeReference" type="tns:XsdTypeReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="InlineType" type="tns:TypeMapping"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="LineNumber" type="xsd:int" use="required"/>
					<xsd:attribute name="IsNillable" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="TypeMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="BaseType" type="tns:QualifiedName"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Type" type="tns:TypeMapping"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RootGroup" type="tns:GroupParticleMapping"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Attributes" type="tns:ArrayOfAttributeMapping"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="ContentAttribute" type="xsd:string"/>
					<xsd:attribute name="ContentType" type="tns:DataType"/>
					<xsd:attribute name="LineNumber" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="GroupParticleMapping">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParticleMapping">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParticleMappings" type="tns:ArrayOfParticleMapping"/>
							</xsd:sequence>
							<xsd:attribute name="Type" use="required">
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="Sequence"/>
										<xsd:enumeration value="Choice"/>
										<xsd:enumeration value="All"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
							<xsd:attribute name="Relation" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ParticleMapping" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="MinOccurs" type="xsd:long" use="required"/>
					<xsd:attribute name="MaxOccurs" type="xsd:long" use="required"/>
					<xsd:attribute name="LineNumber" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ElementParticleMapping">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParticleMapping">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ElementReference" type="tns:ElementRef"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TypeReference" type="tns:XsdTypeReference"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="InlineType" type="tns:TypeMapping"/>
							</xsd:sequence>
							<xsd:attribute name="Name" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
							<xsd:attribute name="Relation" type="xsd:string"/>
							<xsd:attribute name="IsNillable" type="xsd:boolean" use="required"/>
							<xsd:attribute name="Form" type="tns:SchemaForm"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AnyParticleMapping">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ParticleMapping">
							<xsd:attribute name="Name" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfParticleMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ParticleMapping" type="tns:ParticleMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfAttributeMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Attribute" type="tns:AttributeMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="AttributeMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="AttributeReference" type="tns:QualifiedName"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
					<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
					<xsd:attribute name="LineNumber" type="xsd:int" use="required"/>
					<xsd:attribute name="Form" type="tns:SchemaForm"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfTypeMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Type" type="tns:TypeMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FunctionCall">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FlowModule" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Flow" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="InputMappings" type="tns:ArrayOfFunctionCallInputMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="OutputMappings" type="tns:ArrayOfFunctionCallOutputMapping"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFunctionCallInputMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="InputMapping" type="tns:FunctionCallInputMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FunctionCallInputMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParameterName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValueExpression" type="tns:Expression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFunctionCallOutputMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="OutputMapping" type="tns:FunctionCallOutputMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FunctionCallOutputMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParameterName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetEntity" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetAttribute" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ServiceCall">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Content" type="tns:ServiceCallContent"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MappedEvents" type="tns:ArrayOfEventDefinitionImplementation"/>
							</xsd:sequence>
							<xsd:attribute name="ServiceType" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ServiceCallContent" abstract="true"/>
				<xsd:complexType name="DefaultServiceCallContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParameterValues" type="tns:ArrayOfParameterValue"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ThrowMessageEventContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MessageEvent" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseIdsTargetEntity" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseIdsTargetAttribute" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SpecificCaseIds" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfThrowMessageEventValue"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfThrowMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Value" type="tns:ThrowMessageEventValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ThrowMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Field" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DcmThrowMessageEventContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MessageEvent" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseIdsTargetEntity" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseIdsTargetAttribute" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SpecificCaseIds" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfDcmThrowMessageEventValue"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDcmThrowMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Value" type="tns:DcmThrowMessageEventValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DcmThrowMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Field" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ThrowAsyncMessageEventContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MessageEvent" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SpecificCaseIds" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfThrowAsyncMessageEventValue"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfThrowAsyncMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Value" type="tns:ThrowAsyncMessageEventValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ThrowAsyncMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Field" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DashboardThrowPortalMessageEventContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PortalMessageEvent" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfThrowPortalMessageEventValue"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfThrowPortalMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Value" type="tns:ThrowPortalMessageEventValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ThrowPortalMessageEventValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Field" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="GetTaskInfoContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TaskId" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="User" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Team" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Role" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="AuthorizedRoles" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetDate" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TimeoutDate" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Description" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayName" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="StartDate" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Status" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Priority" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="IsManuallyAssigned" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CustomFields" type="tns:ArrayOfGetTaskInfoCustomField"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfGetTaskInfoCustomField">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="CustomField" type="tns:GetTaskInfoCustomField"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="GetTaskInfoCustomField">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CustomField" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Attribute" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="GetCaseInfoContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseId" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayName" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CreationDate" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Status" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ConfigurationModule" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DataMapping" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CmisDocumentManagerContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entries" type="tns:ArrayOfCmisCustomMetaDataEntry"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="ActionType" type="tns:CmisActionType"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Id" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ObjectType" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Path" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FileId" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Connection" type="xsd:string"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="DeleteAllVersions" type="xsd:boolean"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="RemoveFromScope" type="xsd:boolean"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="OutputIdEntity" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="OutputIdAttribute" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="OutputIdTargetInstance" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfCmisCustomMetaDataEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Entry" type="tns:CmisCustomMetaDataEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="CmisCustomMetaDataEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Field" type="xsd:string"/>
				</xsd:complexType>
				<xsd:simpleType name="CmisActionType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Delete"/>
						<xsd:enumeration value="Store"/>
						<xsd:enumeration value="Update"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="CmisGetDocumentMetadataContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PropertyMappings" type="tns:ArrayOfCmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="NameMapping" type="tns:CmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="IdMapping" type="tns:CmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CreatedByMapping" type="tns:CmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CreationDateMapping" type="tns:CmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="LastModifiedByMapping" type="tns:CmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="LastModificationDateMapping" type="tns:CmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="VersionMapping" type="tns:CmisPropertyMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetInstance">
									<xsd:complexType>
										<xsd:attribute name="InstanceEntity" type="xsd:string"/>
										<xsd:attribute name="InstanceRelation" type="xsd:string"/>
										<xsd:attribute name="InstanceAction" type="tns:InstanceAction" use="required"/>
									</xsd:complexType>
								</xsd:element>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetEntity" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ObjectType" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PathFilter" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfCmisPropertyMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="PropertyMapping" type="tns:CmisPropertyMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="CmisPropertyMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Filter" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Property" type="xsd:string"/>
					<xsd:attribute name="TargetAttribute" type="xsd:string"/>
				</xsd:complexType>
				<xsd:simpleType name="InstanceAction">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Clear"/>
						<xsd:enumeration value="NoClear"/>
						<xsd:enumeration value="Merge"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="CsvConnectivityContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Query" type="tns:CsvQuery"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CsvQuery">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetInstance">
							<xsd:complexType>
								<xsd:attribute name="InstanceEntity" type="xsd:string"/>
								<xsd:attribute name="InstanceRelation" type="xsd:string"/>
								<xsd:attribute name="InstanceAction" type="tns:InstanceAction" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Criteria" type="tns:ArrayOfCsvQueryCriterium"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Goals" type="tns:ArrayOfCsvQueryGoal"/>
					</xsd:sequence>
					<xsd:attribute name="Resource" type="xsd:string"/>
					<xsd:attribute name="TargetEntity" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfCsvQueryCriterium">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Criterium">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Column" type="xsd:string"/>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
								</xsd:sequence>
								<xsd:attribute name="Operator" type="tns:MappingOperator" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="MappingOperator">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Equals"/>
						<xsd:enumeration value="NotEquals"/>
						<xsd:enumeration value="LessThan"/>
						<xsd:enumeration value="LessThanOrEqual"/>
						<xsd:enumeration value="GreaterThan"/>
						<xsd:enumeration value="GreaterThanOrEqual"/>
						<xsd:enumeration value="Like"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfCsvQueryGoal">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Goal">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Column" type="xsd:string"/>
								</xsd:sequence>
								<xsd:attribute name="Entity" type="xsd:string"/>
								<xsd:attribute name="Attribute" type="xsd:string"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="AggregateCountContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SearchCriteria" type="tns:ArrayOfAggregateSearchCriteriaEntry"/>
							</xsd:sequence>
							<xsd:attribute name="AggregateType" type="xsd:string"/>
							<xsd:attribute name="TargetEntity" type="xsd:string"/>
							<xsd:attribute name="AggregateCountTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="CountLatestVersionOnly" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfAggregateSearchCriteriaEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="AggregateSearchCriteriaEntry" type="tns:AggregateSearchCriteriaEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="AggregateSearchCriteriaEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Metadata" type="xsd:string"/>
					<xsd:attribute name="Operator" type="tns:SearchOperator" use="required"/>
					<xsd:attribute name="Type" type="tns:SearchEntryMetadataType" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="SearchOperator">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Equals"/>
						<xsd:enumeration value="NotEquals"/>
						<xsd:enumeration value="LessThan"/>
						<xsd:enumeration value="LessThanOrEqual"/>
						<xsd:enumeration value="GreaterThan"/>
						<xsd:enumeration value="GreaterThanOrEqual"/>
						<xsd:enumeration value="Like"/>
						<xsd:enumeration value="NotLike"/>
						<xsd:enumeration value="In"/>
						<xsd:enumeration value="NotIn"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:simpleType name="SearchEntryMetadataType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="CustomMetadata"/>
						<xsd:enumeration value="StandardMetadata"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="StandardMetadataSearchEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:AggregateSearchCriteriaEntry"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CustomMetadataSearchEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:AggregateSearchCriteriaEntry"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AggregateSearchContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SearchCriteria" type="tns:ArrayOfAggregateSearchCriteriaEntry"/>
							</xsd:sequence>
							<xsd:attribute name="AggregateType" type="xsd:string"/>
							<xsd:attribute name="TargetEntity" type="xsd:string"/>
							<xsd:attribute name="AggregateIDTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="VersionIDTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="SearchLatestVersionOnly" type="xsd:boolean" use="required"/>
							<xsd:attribute name="MaxResults" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CaseSearchContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CriteriaEntries" type="tns:ArrayOfCaseSearchCriteriaEntry"/>
							</xsd:sequence>
							<xsd:attribute name="CaseAggregate" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetEntity" type="xsd:string"/>
							<xsd:attribute name="CaseIdTargetAttribute" type="xsd:string"/>
							<xsd:attribute name="MaxResults" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfCaseSearchCriteriaEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="CriteriaEntry" type="tns:CaseSearchCriteriaEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="CaseSearchCriteriaEntry" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FilterSettings" type="tns:FilterSettings"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="CaseSearchDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:CaseSearchCriteriaEntry">
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CaseSearchCaseDataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:CaseSearchCriteriaEntry">
							<xsd:attribute name="CaseDataType" type="tns:CaseDataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CaseSearchCaseMetadataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:CaseSearchCriteriaEntry">
							<xsd:attribute name="Field" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="CaseSearchDossierMetadataEntry">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:CaseSearchCriteriaEntry">
							<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
							<xsd:attribute name="Field" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="InstanceCreateContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="AttributeRelations" type="tns:ArrayOfInstanceCreateAttributeRelationValue"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="InstanceActivationType" type="tns:InstanceActivationType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInstanceCreateAttributeRelationValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="AttributeRelationValue" type="tns:InstanceCreateAttributeRelationValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="InstanceCreateAttributeRelationValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
					<xsd:attribute name="Relation" type="xsd:string"/>
					<xsd:attribute name="HasValue" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="InstanceActivationType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Before"/>
						<xsd:enumeration value="After"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="InstanceUpdateContent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ServiceCallContent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="AttributeRelations" type="tns:ArrayOfInstanceCreateAttributeRelationValue"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EntityExpression" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="HasValue" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ClearBeforeExecute" type="xsd:boolean"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="TextItem">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="NodeSets" type="tns:ArrayOfNodeSet"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfNodeSet">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="NodeSet" type="tns:NodeSet"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="NodeSet">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Nodes" type="tns:ArrayOfTextItemNode1"/>
					</xsd:sequence>
					<xsd:attribute name="Language" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfTextItemNode1">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Node" type="tns:TextItemNode"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="TextItemNode" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Children" type="tns:ArrayOfTextItemNode"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfTextItemNode">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Child" type="tns:TextItemNode"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ConditionNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:TextItemNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FieldNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:TextItemNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="Mask" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="TextNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:TextItemNode">
							<xsd:attribute name="Text" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="PresentationNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:TextItemNode">
							<xsd:attribute name="PresentationStyle" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContentItem">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RootNode" type="tns:ContentNode"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContentNode" abstract="true">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ContentItemNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Children" type="tns:ArrayOfContentItemNode"/>
							</xsd:sequence>
							<xsd:attribute name="ContentStyle" type="xsd:string"/>
							<xsd:attribute name="PresentationStyle" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContentItemNode" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Repeat" type="tns:SortableRepeatExpression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ReferenceNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ContentItemNode">
							<xsd:attribute name="ContentItem" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfContentItemNode">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Child" type="tns:ContentItemNode"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ImageRefNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ContentNode">
							<xsd:attribute name="Height" type="xsd:int"/>
							<xsd:attribute name="Width" type="xsd:int"/>
							<xsd:attribute name="Image" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="TextRefNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ContentNode">
							<xsd:attribute name="TextItem" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="InlineTextNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ContentNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TextItem" type="tns:TextItem"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Document">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ContentItem" type="tns:ContentItem"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DomainSchema">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RootObject" type="tns:DomainObject"/>
							</xsd:sequence>
							<xsd:attribute name="RootName" type="xsd:string"/>
							<xsd:attribute name="RootEntity" type="xsd:string"/>
							<xsd:attribute name="IsRootElementHidden" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DomainObject">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DomainProperties" type="tns:ArrayOfDomainProperty"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDomainProperty">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="DomainProperty" type="tns:DomainProperty"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DomainProperty">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Documentation" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RelationObject" type="tns:DomainObject"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CustomSchemaElementReference" type="tns:ElementRef"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="ItemName" type="xsd:string"/>
					<xsd:attribute name="Required" type="xsd:boolean" use="required"/>
					<xsd:attribute name="MultiValued" type="xsd:boolean" use="required"/>
					<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
					<xsd:attribute name="Primitive" type="xsd:boolean" use="required"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
					<xsd:attribute name="Relation" type="xsd:string"/>
					<xsd:attribute name="DomainSchema" type="xsd:string"/>
					<xsd:attribute name="IsDomainSchema" type="xsd:boolean" use="required"/>
					<xsd:attribute name="IsCustomSchemaElement" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="Image">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Data" type="xsd:base64Binary"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="Type" type="tns:ImageType"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="QRCodeContent" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="ContentType" type="tns:ImageContentType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="ImageType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Jpeg"/>
						<xsd:enumeration value="SVG"/>
						<xsd:enumeration value="GIF"/>
						<xsd:enumeration value="BMP"/>
						<xsd:enumeration value="PNG"/>
						<xsd:enumeration value="UNKNOWN"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:simpleType name="ImageContentType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Upload"/>
						<xsd:enumeration value="QRCode"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="Attribute">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DefaultValue" type="tns:DefaultValue"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="QuestionText" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExplainText" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
							<xsd:attribute name="ValueList" type="xsd:string"/>
							<xsd:attribute name="MultiValued" type="xsd:boolean" use="required"/>
							<xsd:attribute name="Askable" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ActsAsReference" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ReferencedType" type="xsd:string"/>
							<xsd:attribute name="Connection" type="xsd:string"/>
							<xsd:attribute name="ReferencedId" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DefaultValue" abstract="true"/>
				<xsd:complexType name="ConstantValue">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DefaultValue">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfString4"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString4">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Value" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ExpressionValue">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DefaultValue">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="JustificationAsset" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DecisionTableValue">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DefaultValue">
							<xsd:attribute name="DecisionTable" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ExternalValue">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DefaultValue">
							<xsd:attribute name="ExternalRule" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Entity">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:attribute name="BaseEntity" type="xsd:string"/>
							<xsd:attribute name="Singleton" type="xsd:boolean" use="required"/>
							<xsd:attribute name="Abstract" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Relation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DefaultValue" type="tns:DefaultValue"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="QuestionText" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExplainText" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValidationRules" type="tns:ArrayOfValidationRuleReference"/>
							</xsd:sequence>
							<xsd:attribute name="FromEntity" type="xsd:string"/>
							<xsd:attribute name="ToEntity" type="xsd:string"/>
							<xsd:attribute name="ReverseName" type="xsd:string"/>
							<xsd:attribute name="MultiValued" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ReverseMultiValued" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Aggregate">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EntityReferences" type="tns:ArrayOfString8"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RelationReferences" type="tns:ArrayOfAggregateRelationReference"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Metadata" type="tns:ArrayOfAggregateMetadata"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
							</xsd:sequence>
							<xsd:attribute name="HasExcludedRelations" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString8">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EntityReferences" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfAggregateRelationReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="RelationReference" type="tns:AggregateRelationReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="AggregateRelationReference">
					<xsd:attribute name="Relation" type="xsd:string"/>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="FromEntity" type="xsd:string"/>
					<xsd:attribute name="ToEntity" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfAggregateMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Metadata" type="tns:AggregateMetadata"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="AggregateMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Type" type="tns:DataType" use="required"/>
					<xsd:attribute name="MultiValued" type="xsd:boolean"/>
					<xsd:attribute name="ValueList" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="StaticInstance">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="AttributeValues" type="tns:ArrayOfInstanceAttributeValue"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RelationValues" type="tns:ArrayOfInstanceRelationValue"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInstanceAttributeValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="AttributeValue" type="tns:InstanceAttributeValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="InstanceAttributeValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfString4"/>
					</xsd:sequence>
					<xsd:attribute name="Attribute" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInstanceRelationValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="RelationValue" type="tns:InstanceRelationValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="InstanceRelationValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="StaticInstances" type="tns:ArrayOfInstanceKey"/>
					</xsd:sequence>
					<xsd:attribute name="Relation" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInstanceKey">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="InstanceReference" type="tns:InstanceKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ERDiagram">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EntityReferences" type="tns:ArrayOfEntityReference"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RelationReferences" type="tns:ArrayOfERRelationReference"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="InheritanceConnections" type="tns:ArrayOfInheritanceConnection"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DiagramGroups" type="tns:ArrayOfDiagramGroup"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfEntityReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EntityReference" type="tns:EntityReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="EntityReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="OpenBounds" type="tns:Bounds"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ClosedBounds" type="tns:Bounds"/>
					</xsd:sequence>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="Color" type="xsd:string"/>
					<xsd:attribute name="ShowAttributes" type="xsd:boolean" use="required"/>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="Bounds">
					<xsd:attribute name="X" type="xsd:int" use="required"/>
					<xsd:attribute name="Y" type="xsd:int" use="required"/>
					<xsd:attribute name="Width" type="xsd:int" use="required"/>
					<xsd:attribute name="Height" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfERRelationReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="RelationReference" type="tns:ERRelationReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ERRelationReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Waypoints" type="tns:ArrayOfWaypoint"/>
					</xsd:sequence>
					<xsd:attribute name="Relation" type="xsd:string"/>
					<xsd:attribute name="FromEntity" type="xsd:string"/>
					<xsd:attribute name="ToEntity" type="xsd:string"/>
					<xsd:attribute name="ShowName" type="xsd:boolean" use="required"/>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfWaypoint">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Waypoint" type="tns:Waypoint"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Waypoint">
					<xsd:attribute name="X" type="xsd:int" use="required"/>
					<xsd:attribute name="Y" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInheritanceConnection">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="InheritanceConnection" type="tns:InheritanceConnection"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="InheritanceConnection">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Waypoints" type="tns:ArrayOfWaypoint"/>
					</xsd:sequence>
					<xsd:attribute name="BaseEntity" type="xsd:string"/>
					<xsd:attribute name="DerivedEntity" type="xsd:string"/>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDiagramGroup">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="DiagramGroup" type="tns:DiagramGroup"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DiagramGroup">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Elements" type="tns:ArrayOfInt2"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CollapsedBounds" type="tns:Bounds"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExpandedBounds" type="tns:Bounds"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Collapsed" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInt2">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ElementRef" type="xsd:int"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ValidationRule">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Message" type="tns:ArrayOfMultiLingualText"/>
							</xsd:sequence>
							<xsd:attribute name="Blocking" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ValueList">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Conditions" type="tns:ArrayOfVLCondition"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Actions" type="tns:ArrayOfVLAction"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourcePaths" type="tns:ArrayOfVLSourcePath"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Layout" type="tns:VLDecisionTableLayout"/>
							</xsd:sequence>
							<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
							<xsd:attribute name="External" type="xsd:boolean" use="required"/>
							<xsd:attribute name="Conditional" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLCondition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Condition" type="tns:VLCondition"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLCondition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Alternatives" type="tns:ArrayOfVLConditionAlternative"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLConditionAlternative">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Alternative" type="tns:VLConditionAlternative"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLConditionAlternative">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLAction">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Action" type="tns:VLAction"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLAction">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Alternatives" type="tns:ArrayOfVLActionAlternative"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayValue" type="tns:ArrayOfMultiLingualText"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FormatDefinition" type="tns:ValueListItemReference"/>
					</xsd:sequence>
					<xsd:attribute name="Value" type="xsd:string"/>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLActionAlternative">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Alternative" type="tns:VLActionAlternative"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLActionAlternative">
					<xsd:attribute name="Enabled" type="xsd:boolean" use="required"/>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLSourcePath">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="SourcePath" type="tns:VLSourcePath"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLSourcePath">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CondAlts" type="tns:ArrayOfVLConditionAlternativeRef"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ActionAlts" type="tns:ArrayOfVLActionAlternativeRef"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLConditionAlternativeRef">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="CondAlt" type="tns:VLConditionAlternativeRef"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLConditionAlternativeRef">
					<xsd:attribute name="AltRefId" type="xsd:int" use="required"/>
					<xsd:attribute name="CondRefId" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLActionAlternativeRef">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ActionAlt" type="tns:VLActionAlternativeRef"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLActionAlternativeRef">
					<xsd:attribute name="AltRefId" type="xsd:int" use="required"/>
					<xsd:attribute name="ActionRefId" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="VLDecisionTableLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourcePathLayouts" type="tns:ArrayOfVLSourcePathLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ConditionLayouts" type="tns:ArrayOfVLConditionLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ActionLayouts" type="tns:ArrayOfVLActionLayout"/>
					</xsd:sequence>
					<xsd:attribute name="QuestionColumnWidth" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLSourcePathLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="SourcePathLayout" type="tns:VLSourcePathLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLSourcePathLayout">
					<xsd:attribute name="VLSourcePathRef" type="xsd:int" use="required"/>
					<xsd:attribute name="Width" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLConditionLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ConditionLayout" type="tns:VLConditionLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLConditionLayout">
					<xsd:attribute name="VLConditionRef" type="xsd:int" use="required"/>
					<xsd:attribute name="Height" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfVLActionLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ActionLayout" type="tns:VLActionLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="VLActionLayout">
					<xsd:attribute name="VLActionRef" type="xsd:int" use="required"/>
					<xsd:attribute name="Height" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="Flow">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Channels" type="tns:ArrayOfString6"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Nodes" type="tns:ArrayOfFlowNode"/>
								<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Groups" type="tns:FlowGroup"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Layout" type="tns:FlowLayout"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FunctionDefinition" type="tns:FunctionFlowDefinition"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExternalFlowDefinition" type="tns:ExternalFlow"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DcmWidgetDefinition" type="tns:ArrayOfDcmWidgetFlowParameter"/>
							</xsd:sequence>
							<xsd:attribute name="FlowType" type="xsd:string"/>
							<xsd:attribute name="Exposed" type="xsd:boolean" use="required"/>
							<xsd:attribute name="Transactional" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFlowNode">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Node" type="tns:FlowNode"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FlowNode" abstract="true">
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="FlowStartNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edge" type="tns:FlowStartEdge"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FlowStartEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowEdge"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FlowEdge" abstract="true">
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
					<xsd:attribute name="ToNodeRef" type="xsd:int"/>
				</xsd:complexType>
				<xsd:complexType name="FlowConditionEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowEdge">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Alternative" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Label" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FlowActionEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowEdge">
							<xsd:attribute name="FlowEvent" type="xsd:string"/>
							<xsd:attribute name="EventType" type="tns:FlowEventType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FlowActionNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RepeatExpression" type="tns:SortableRepeatExpression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edges" type="tns:ArrayOfFlowActionEdge"/>
							</xsd:sequence>
							<xsd:attribute name="ActionType" type="tns:ActionNodeType" use="required"/>
							<xsd:attribute name="Page" type="xsd:string"/>
							<xsd:attribute name="Flow" type="xsd:string"/>
							<xsd:attribute name="Service" type="xsd:string"/>
							<xsd:attribute name="Function" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFlowActionEdge">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Edge" type="tns:FlowActionEdge"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="ActionNodeType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Page"/>
						<xsd:enumeration value="Service"/>
						<xsd:enumeration value="Flow"/>
						<xsd:enumeration value="Function"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="FlowConditionNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edges" type="tns:ArrayOfFlowConditionEdge"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Label" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFlowConditionEdge">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Edge" type="tns:FlowConditionEdge"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FlowEndNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventImplementation" type="tns:EventImplementation"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FlowDcmWidgetEventNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:FlowNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Event" type="tns:DcmWidgetEvent"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWidgetEvent" abstract="true"/>
				<xsd:complexType name="DcmWidgetOpenCaseEvent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWidgetEvent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseId" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseType" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventData" type="tns:ArrayOfEventDataItem"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfEventDataItem">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Items" type="tns:EventDataItem"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="EventDataItem">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Key" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="DcmWidgetStartCaseEvent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWidgetEvent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseType" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DcmWidgetStartTaskEvent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DcmWidgetEvent">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseId" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CaseType" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TaskId" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FlowGroup">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Nodes" type="tns:ArrayOfInt1"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Collapsed" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInt1">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="NodeRef" type="xsd:int"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FlowLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="NodeLayouts" type="tns:ArrayOfNodeLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EdgeLayouts" type="tns:ArrayOfEdgeLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="GroupLayouts" type="tns:ArrayOfGroupLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfNodeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="NodeLayout" type="tns:NodeLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="NodeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Bounds" type="tns:Bounds"/>
					</xsd:sequence>
					<xsd:attribute name="NodeRef" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ActionNodeLayout">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:NodeLayout">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventKeyPositions" type="tns:ArrayOfEventKeyPosition"/>
							</xsd:sequence>
							<xsd:attribute name="LibraryIcon" type="tns:NodeIcon" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfEventKeyPosition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EventKeyPosition" type="tns:EventKeyPosition"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="EventKeyPosition">
					<xsd:attribute name="FlowEvent" type="xsd:string"/>
					<xsd:attribute name="EventType" type="tns:FlowEventType" use="required"/>
					<xsd:attribute name="X" type="xsd:int" use="required"/>
					<xsd:attribute name="Y" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="NodeIcon">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="None"/>
						<xsd:enumeration value="Alarm"/>
						<xsd:enumeration value="Balance"/>
						<xsd:enumeration value="Bank"/>
						<xsd:enumeration value="Basket"/>
						<xsd:enumeration value="Binoculars"/>
						<xsd:enumeration value="bug1"/>
						<xsd:enumeration value="bug2"/>
						<xsd:enumeration value="Calculator"/>
						<xsd:enumeration value="Calender_Day"/>
						<xsd:enumeration value="car"/>
						<xsd:enumeration value="Cash"/>
						<xsd:enumeration value="Clock"/>
						<xsd:enumeration value="Company"/>
						<xsd:enumeration value="Court"/>
						<xsd:enumeration value="Credit_Card"/>
						<xsd:enumeration value="Database_Red"/>
						<xsd:enumeration value="Database_Yellow"/>
						<xsd:enumeration value="Delete_2_R"/>
						<xsd:enumeration value="File"/>
						<xsd:enumeration value="File_Left"/>
						<xsd:enumeration value="File_Right"/>
						<xsd:enumeration value="Filter"/>
						<xsd:enumeration value="Folder_Yellow3"/>
						<xsd:enumeration value="Folder_Yellow_Closed"/>
						<xsd:enumeration value="Ghost"/>
						<xsd:enumeration value="Home"/>
						<xsd:enumeration value="Hospital_Building"/>
						<xsd:enumeration value="information"/>
						<xsd:enumeration value="Insert_2_Y"/>
						<xsd:enumeration value="Journal"/>
						<xsd:enumeration value="Key"/>
						<xsd:enumeration value="Lens_Blue"/>
						<xsd:enumeration value="Lock_Secure"/>
						<xsd:enumeration value="Mail_Send_Receive"/>
						<xsd:enumeration value="Office_Phone"/>
						<xsd:enumeration value="owl"/>
						<xsd:enumeration value="Postcode"/>
						<xsd:enumeration value="Post_1_G"/>
						<xsd:enumeration value="Printer"/>
						<xsd:enumeration value="Productivity"/>
						<xsd:enumeration value="Receptionist_Man_Black_B"/>
						<xsd:enumeration value="Recycle_Bin_Empty"/>
						<xsd:enumeration value="Reports"/>
						<xsd:enumeration value="Save"/>
						<xsd:enumeration value="Shipping_Transport_Many"/>
						<xsd:enumeration value="Spider"/>
						<xsd:enumeration value="Strongbox"/>
						<xsd:enumeration value="Thesaurus_2"/>
						<xsd:enumeration value="Tool_Set"/>
						<xsd:enumeration value="Traffic_Bulb"/>
						<xsd:enumeration value="Users"/>
						<xsd:enumeration value="User_Man"/>
						<xsd:enumeration value="User_Woman"/>
						<xsd:enumeration value="WorkStation"/>
						<xsd:enumeration value="IntermediateMessage"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfEdgeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EdgeLayout" type="tns:EdgeLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="EdgeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Offset" type="tns:ConnectionOffset"/>
					</xsd:sequence>
					<xsd:attribute name="EdgeRef" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ConnectionOffset">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Waypoints" type="tns:ArrayOfWaypoint"/>
					</xsd:sequence>
					<xsd:attribute name="FromOffsetX" type="xsd:int" use="required"/>
					<xsd:attribute name="FromOffsetY" type="xsd:int" use="required"/>
					<xsd:attribute name="ToOffsetX" type="xsd:int" use="required"/>
					<xsd:attribute name="ToOffsetY" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ConditionEdgeLayout">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:EdgeLayout">
							<xsd:attribute name="LabelPosition" type="xsd:int" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfGroupLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="GroupLayout" type="tns:GroupLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="GroupLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CollapsedBounds" type="tns:Bounds"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExpandedBounds" type="tns:Bounds"/>
					</xsd:sequence>
					<xsd:attribute name="GroupRef" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="FunctionFlowDefinition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Documentation" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="InputParameters" type="tns:FunctionFlowInputParameter"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="OutputParameters" type="tns:FunctionFlowOutputParameter"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FunctionFlowInputParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Documentation" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="ParameterName" type="xsd:string"/>
					<xsd:attribute name="TargetEntity" type="xsd:string"/>
					<xsd:attribute name="TargetAttribute" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="FunctionFlowOutputParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Documentation" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValueExpression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="ParameterName" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ExternalFlow">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Contract" type="tns:ModuleKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Configuration" type="tns:ModuleKey"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="MappedContractEvents" type="tns:ContractFlowEventImplementation"/>
					</xsd:sequence>
					<xsd:attribute name="DataMapping" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ContractFlowEventImplementation">
					<xsd:attribute name="EventType" type="tns:FlowEventType" use="required"/>
					<xsd:attribute name="ContractEvent" type="xsd:string"/>
					<xsd:attribute name="FlowEvent" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDcmWidgetFlowParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Parameters" type="tns:DcmWidgetFlowParameter"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DcmWidgetFlowParameter">
					<xsd:attribute name="ParameterName" type="xsd:string"/>
					<xsd:attribute name="TargetEntity" type="xsd:string"/>
					<xsd:attribute name="TargetAttribute" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="FlowEvent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Parameters" type="tns:ArrayOfString5"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString5">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Parameter" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Process">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayName" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Nodes" type="tns:ArrayOfProcessNode"/>
								<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Groups" type="tns:ProcessGroup"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Layout" type="tns:ProcessLayout"/>
							</xsd:sequence>
							<xsd:attribute name="PersistencyName" type="xsd:string"/>
							<xsd:attribute name="ProcessType" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessNode">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Node" type="tns:ProcessNode"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessNode" abstract="true">
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
					<xsd:attribute name="PersistencyId" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ProcessActivityNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edges" type="tns:ArrayOfProcessActivityEdge"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="AdHocNodeConfiguration" nillable="true" type="tns:AdHocNodeConfiguration"/>
							</xsd:sequence>
							<xsd:attribute name="ActivityType" type="tns:ActivityNodeType" use="required"/>
							<xsd:attribute name="Task" type="xsd:string"/>
							<xsd:attribute name="Process" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessActivityEdge">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Edge" type="tns:ProcessActivityEdge"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessActivityEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessEdge">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TimerCondition" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="ReevaluationEvent" type="tns:ReevaluationEvent" use="required"/>
							<xsd:attribute name="ProcessEvent" type="xsd:string"/>
							<xsd:attribute name="EventType" type="tns:ProcessEventType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessEdge" abstract="true">
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
					<xsd:attribute name="ToNodeRef" type="xsd:int"/>
				</xsd:complexType>
				<xsd:complexType name="ProcessTimerEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessEdge"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessConditionEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessEdge"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessExternalMessageEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessEdge"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessJoinEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessEdge"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessSplitEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessEdge">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="MyLabel">
									<xsd:complexType mixed="true">
										<xsd:sequence>
											<xsd:any/>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="Label" type="xsd:string"/>
							<xsd:attribute name="LabelPosition" type="xsd:int" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessStartEdge">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessEdge"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="ReevaluationEvent">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="OnCreation"/>
						<xsd:enumeration value="OnDomainChange"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:simpleType name="ProcessEventType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Plain"/>
						<xsd:enumeration value="Cancel"/>
						<xsd:enumeration value="Timer"/>
						<xsd:enumeration value="Exception"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="AdHocNodeConfiguration">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PreCondition" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Required" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Repeatable" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="ActivityNodeType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Task"/>
						<xsd:enumeration value="Process"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ProcessConditionalNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edge" type="tns:ProcessConditionEdge"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="IsAdHocNode" type="xsd:boolean"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="MyLabel">
									<xsd:complexType mixed="true">
										<xsd:sequence>
											<xsd:any/>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="Label" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessEndNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:attribute name="ProcessEvent" type="xsd:string"/>
							<xsd:attribute name="EventType" type="tns:ProcessEventType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessExternalMessageNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edge" type="tns:ProcessExternalMessageEdge"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="EventMapping" nillable="true" type="tns:IntermediateMessageEventMapping"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="AdHocNodeConfiguration" nillable="true" type="tns:AdHocNodeConfiguration"/>
							</xsd:sequence>
							<xsd:attribute name="MessageType" type="tns:ExternalMessageNodeType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="IntermediateMessageEventMapping">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:MessageEventMapping">
							<xsd:attribute name="IdentifierField" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="MessageEventMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="FieldMapping">
							<xsd:complexType>
								<xsd:attribute name="Field" type="xsd:string"/>
								<xsd:attribute name="Entity" type="xsd:string"/>
								<xsd:attribute name="Attribute" type="xsd:string"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="MessageEvent" type="xsd:string"/>
					<xsd:attribute name="TargetInstance" type="xsd:string"/>
					<xsd:attribute name="MatchOn" type="xsd:string"/>
				</xsd:complexType>
				<xsd:simpleType name="ExternalMessageNodeType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Outgoing"/>
						<xsd:enumeration value="Incoming"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ProcessGatewayNode" abstract="true">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:attribute name="GatewayType" type="tns:GatewayType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="GatewayType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Xor"/>
						<xsd:enumeration value="Parallel"/>
						<xsd:enumeration value="InclusiveOr"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ProcessJoinNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessGatewayNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edges" type="tns:ArrayOfProcessJoinEdge"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessJoinEdge">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Edge" type="tns:ProcessJoinEdge"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessSplitNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessGatewayNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edges" type="tns:ArrayOfProcessSplitEdge"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessSplitEdge">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Edge" type="tns:ProcessSplitEdge"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessStartNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edge" type="tns:ProcessStartEdge"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessEventStartNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MessageEvent" type="tns:MessageEventMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edge" type="tns:ProcessStartEdge"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessTimerNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TimerCondition" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Edge" type="tns:ProcessTimerEdge"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="AdHocNodeConfiguration" nillable="true" type="tns:AdHocNodeConfiguration"/>
							</xsd:sequence>
							<xsd:attribute name="ReevaluationEvent" type="tns:ReevaluationEvent" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessGroup">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Nodes" type="tns:ArrayOfInt1"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Collapsed" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ProcessLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="NodeLayouts" type="tns:ArrayOfProcessNodeLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EdgeLayouts" type="tns:ArrayOfProcessEdgeLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="GroupLayouts" type="tns:ArrayOfProcessGroupLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessNodeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="NodeLayout" type="tns:ProcessNodeLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessNodeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Bounds" type="tns:Bounds"/>
					</xsd:sequence>
					<xsd:attribute name="NodeRef" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ActivityNodeLayout">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ProcessNodeLayout">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventKeyPositions" type="tns:ArrayOfProcessEventKeyPosition"/>
							</xsd:sequence>
							<xsd:attribute name="LibraryIcon" type="tns:NodeIcon" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessEventKeyPosition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EventKeyPosition" type="tns:ProcessEventKeyPosition"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessEventKeyPosition">
					<xsd:attribute name="ProcessEvent" type="xsd:string"/>
					<xsd:attribute name="EventType" type="tns:ProcessEventType" use="required"/>
					<xsd:attribute name="X" type="xsd:int" use="required"/>
					<xsd:attribute name="Y" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessEdgeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EdgeLayout" type="tns:ProcessEdgeLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessEdgeLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Offset" type="tns:ConnectionOffset"/>
					</xsd:sequence>
					<xsd:attribute name="EdgeRef" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessGroupLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="GroupLayout" type="tns:ProcessGroupLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessGroupLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CollapsedBounds" type="tns:Bounds"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExpandedBounds" type="tns:Bounds"/>
					</xsd:sequence>
					<xsd:attribute name="GroupRef" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ProcessTask">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="AutomaticConfiguration" type="tns:AutomaticConfiguration"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayName" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventKeys" type="tns:ArrayOfProcessEventKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DueDate" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CustomFields" type="tns:ArrayOfProcessTaskCustomField"/>
							</xsd:sequence>
							<xsd:attribute name="ReevaluationEvent" type="tns:ReevaluationEvent" use="required"/>
							<xsd:attribute name="CaseLock" type="xsd:boolean" use="required"/>
							<xsd:attribute name="AuthorizationAlgorithm" type="xsd:string"/>
							<xsd:attribute name="RoutingAlgorithm" type="xsd:string"/>
							<xsd:attribute name="PriorityAlgorithm" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AutomaticConfiguration">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="FailRepeatInterval" type="xsd:int"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FailRepeatExpression" type="tns:Expression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessEventKey">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EventKey" type="tns:ProcessEventKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessEventKey">
					<xsd:attribute name="ProcessEvent" type="xsd:string"/>
					<xsd:attribute name="EventType" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProcessTaskCustomField">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="CustomField" type="tns:ProcessTaskCustomField"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProcessTaskCustomField">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ProcessEvent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RoutingAlgorithm">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="ExternalSource" type="xsd:boolean"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="UserOverwritingEnabled" type="xsd:boolean"/>
							</xsd:sequence>
							<xsd:attribute name="ReevaluationEvent" type="tns:ReevaluationEvent" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="PriorityAlgorithm">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="ExternalSource" type="xsd:boolean"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="StartTimeExpression" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="ReevaluationTime" type="tns:ReevaluationTime" use="required"/>
							<xsd:attribute name="ReevaluationEvent" type="tns:ReevaluationEvent" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="ReevaluationTime">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Never"/>
						<xsd:enumeration value="EveryWeek"/>
						<xsd:enumeration value="EveryDay"/>
						<xsd:enumeration value="EveryHour"/>
						<xsd:enumeration value="EveryMinute"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="AuthorizationAlgorithm">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="ExternalSource" type="xsd:boolean"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RestrictedUserIds" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="MessageEvent">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MessageEventFields" type="tns:ArrayOfMessageEventField"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfMessageEventField">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="MessageEventField" type="tns:MessageEventField"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="MessageEventField">
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
					<xsd:attribute name="Required" type="xsd:boolean" use="required"/>
					<xsd:attribute name="AllowMultivalued" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="Asset">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FormatValues" type="tns:ArrayOfFormatValue"/>
							</xsd:sequence>
							<xsd:attribute name="AssetType" type="xsd:string"/>
							<xsd:attribute name="Metadata" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFormatValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="FormatValue" type="tns:FormatValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FormatValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Text" type="tns:ArrayOfMultiLingualText"/>
					</xsd:sequence>
					<xsd:attribute name="Format" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="Button">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Caption" type="tns:ArrayOfMultiLingualText"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Page">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayName" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Containments" type="tns:ArrayOfContainment"/>
							</xsd:sequence>
							<xsd:attribute name="ContentStyle" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="BusinessRule">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Action" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="JustificationAsset" type="xsd:string"/>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DataRule">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Query" type="tns:CsvQuery"/>
							</xsd:sequence>
							<xsd:attribute name="JustificationAsset" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DecisionTable">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Conditions" type="tns:ArrayOfDTCondition"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Actions" type="tns:ArrayOfDTAction"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourcePaths" type="tns:ArrayOfDTSourcePath"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Layout" type="tns:DecisionTableLayout"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTCondition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Condition" type="tns:DTCondition"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTCondition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Alternatives" type="tns:ArrayOfDTConditionAlternative"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTConditionAlternative">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Alternative" type="tns:DTConditionAlternative"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTConditionAlternative">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTAction">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Action" type="tns:DTAction"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTAction">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Alternatives" type="tns:ArrayOfDTActionAlternative"/>
					</xsd:sequence>
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
					<xsd:attribute name="Height" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTActionAlternative">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Alternative" type="tns:DTActionAlternative"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTActionAlternative">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTSourcePath">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="SourcePath" type="tns:DTSourcePath"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTSourcePath">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="CondAlts" type="tns:ArrayOfDTConditionAlternativeRef"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ActionAlts" type="tns:ArrayOfDTActionAlternativeRef"/>
					</xsd:sequence>
					<xsd:attribute name="JustificationAsset" type="xsd:string"/>
					<xsd:attribute name="Id" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTConditionAlternativeRef">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="CondAlt" type="tns:DTConditionAlternativeRef"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTConditionAlternativeRef">
					<xsd:attribute name="AltRefId" type="xsd:int" use="required"/>
					<xsd:attribute name="CondRefId" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTActionAlternativeRef">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ActionAlt" type="tns:DTActionAlternativeRef"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTActionAlternativeRef">
					<xsd:attribute name="AltRefId" type="xsd:int" use="required"/>
					<xsd:attribute name="ActionRefId" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="DecisionTableLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourcePathLayouts" type="tns:ArrayOfDTSourcePathLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ConditionLayouts" type="tns:ArrayOfDTConditionLayout"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ActionLayouts" type="tns:ArrayOfDTActionLayout"/>
					</xsd:sequence>
					<xsd:attribute name="QuestionColumnWidth" type="xsd:int" use="required"/>
					<xsd:attribute name="JustificationHeight" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTSourcePathLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="SourcePathLayout" type="tns:DTSourcePathLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTSourcePathLayout">
					<xsd:attribute name="DTSourcePathRef" type="xsd:int" use="required"/>
					<xsd:attribute name="Width" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTConditionLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ConditionLayout" type="tns:DTConditionLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTConditionLayout">
					<xsd:attribute name="DTConditionRef" type="xsd:int" use="required"/>
					<xsd:attribute name="Height" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDTActionLayout">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ActionLayout" type="tns:DTActionLayout"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DTActionLayout">
					<xsd:attribute name="DTActionRef" type="xsd:int" use="required"/>
					<xsd:attribute name="Height" type="xsd:int" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="DecisionTree">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayName" type="tns:ArrayOfMultiLingualText"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="RootNode" type="tns:DTConditionNode"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Symptoms" type="tns:ArrayOfArrayOfMultiLingualText"/>
							</xsd:sequence>
							<xsd:attribute name="ExposedAsWebservice" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DTConditionNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DecisionTreeNode">
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DecisionTreeNode" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Alternative" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Children" type="tns:ArrayOfDecisionTreeNodeChild"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDecisionTreeNodeChild">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Child" type="tns:DecisionTreeNodeChild"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DecisionTreeNodeChild">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Node" type="tns:DecisionTreeNode"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DecisionTreeRefNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DecisionTreeNode">
							<xsd:attribute name="DecisionTree" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContainerRefNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DecisionTreeNode">
							<xsd:attribute name="Container" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AssetRefNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DecisionTreeNode">
							<xsd:attribute name="Asset" type="xsd:string"/>
							<xsd:attribute name="Format" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ActionNode">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DecisionTreeNode">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Action" type="tns:Expression"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfArrayOfMultiLingualText">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Symptom" type="tns:ArrayOfMultiLingualText"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ReusableExpression">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ExternalRule">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourcingAttributes" type="tns:ArrayOfSourceAttribute"/>
							</xsd:sequence>
							<xsd:attribute name="JustificationAsset" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfSourceAttribute">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="SourcingAttribute" type="tns:SourceAttribute"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SourceAttribute">
					<xsd:attribute name="Entity" type="xsd:string"/>
					<xsd:attribute name="Attribute" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="RuleGroup">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PreCondition" type="tns:Expression"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Elements" type="tns:ArrayOfRuleGroupReference"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfRuleGroupReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Element" type="tns:RuleGroupReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="RuleGroupReference" abstract="true"/>
				<xsd:complexType name="DataRuleReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:RuleGroupReference">
							<xsd:attribute name="DataRule" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="BusinessRuleReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:RuleGroupReference">
							<xsd:attribute name="BusinessRule" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ExternalRuleReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:RuleGroupReference">
							<xsd:attribute name="ExternalRule" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DecisionTableReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:RuleGroupReference">
							<xsd:attribute name="DecisionTable" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RuleGroupValidationRuleReference">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:RuleGroupReference">
							<xsd:attribute name="ValidationRule" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DataMapping">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourceModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ForwardMappings" type="tns:ArrayOfInstanceMapping"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReversedMappings" type="tns:ArrayOfInstanceMapping"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfInstanceMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="InstanceMapping" type="tns:InstanceMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="InstanceMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PreCondition" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourceExpression" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="InstanceMatchAction" type="tns:InstanceMatchAction"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ContextExpressions" type="tns:ArrayOfMappingContextExpression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="MatchingConditions" type="tns:ArrayOfMatchingCondition"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValueMappings" type="tns:ArrayOfValueMapping"/>
					</xsd:sequence>
					<xsd:attribute name="TargetEntity" type="xsd:string"/>
					<xsd:attribute name="SourceLabel" type="xsd:string"/>
					<xsd:attribute name="AutomaticMatching" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="InstanceMatchAction">
					<xsd:attribute name="NoMatchingTargetAction" type="tns:InstanceMatchingType" use="required"/>
					<xsd:attribute name="MatchingInstanceAction" type="tns:InstanceMatchingType" use="required"/>
					<xsd:attribute name="NoMatchingSourceAction" type="tns:InstanceMatchingType" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="InstanceMatchingType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Transfer"/>
						<xsd:enumeration value="Ignore"/>
						<xsd:enumeration value="Error"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfMappingContextExpression">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ContextExpression" type="tns:MappingContextExpression"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="MappingContextExpression">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Label" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfMatchingCondition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="MatchingCondition" type="tns:MatchingCondition"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="MatchingCondition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TargetExpression" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="SourceExpression" type="tns:Expression"/>
					</xsd:sequence>
					<xsd:attribute name="Operator" type="tns:MatchingOperator" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="MatchingOperator">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Equal"/>
						<xsd:enumeration value="NotEqual"/>
						<xsd:enumeration value="GreaterThan"/>
						<xsd:enumeration value="LessThan"/>
						<xsd:enumeration value="LessOrEqualThan"/>
						<xsd:enumeration value="GreaterOrEqualThan"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfValueMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ValueMapping" type="tns:ValueMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ValueMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Target" type="tns:ValueMappingTarget"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ValueMappings" type="tns:ArrayOfValueMappingEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ValueMappingTarget" abstract="true"/>
				<xsd:complexType name="AttributeMappingTarget">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ValueMappingTarget">
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="RelationMappingTarget">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ValueMappingTarget">
							<xsd:attribute name="Relation" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfValueMappingEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ValueMapping" type="tns:ValueMappingEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ValueMappingEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Expression" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Condition" type="tns:Expression"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="JustificationTreeDetails" type="tns:JustificationTreeMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="JustificationTreeMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Entity" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Attribute" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="Depth" type="tns:JustificationTreeDepth"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="AssetFormat" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="JustificationTreeDepth">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Primary"/>
						<xsd:enumeration value="Secondary"/>
						<xsd:enumeration value="All"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="TaskMapping">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TaskMappings" type="tns:ArrayOfMappingEntry"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ProcessModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ImplementationModule" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Precondition" type="tns:Expression"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfMappingEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="TaskMapping" type="tns:MappingEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="MappingEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventMappings" type="tns:ArrayOfEventMapping"/>
					</xsd:sequence>
					<xsd:attribute name="Task" type="xsd:string"/>
					<xsd:attribute name="Flow" type="xsd:string"/>
					<xsd:attribute name="DataMapping" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfEventMapping">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EventMapping" type="tns:EventMapping"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="EventMapping">
					<xsd:attribute name="FlowEvent" type="xsd:string"/>
					<xsd:attribute name="FlowEventType" type="tns:FlowEventType"/>
					<xsd:attribute name="ProcessEvent" type="xsd:string"/>
					<xsd:attribute name="ProcessEventType" type="tns:ProcessEventType"/>
				</xsd:complexType>
				<xsd:complexType name="UnitTest">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Profiles" type="tns:ArrayOfProfileReference"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ExpectedValues" type="tns:ArrayOfString4"/>
							</xsd:sequence>
							<xsd:attribute name="Entity" type="xsd:string"/>
							<xsd:attribute name="Attribute" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProfileReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Profile" type="tns:ProfileReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProfileReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Profile" type="tns:Profile"/>
					</xsd:sequence>
					<xsd:attribute name="InstanceName" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="Profile">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Instances" type="tns:ArrayOfProfileInstance"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProfileInstance">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Instance" type="tns:ProfileInstance"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProfileInstance">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Attributes" type="tns:ArrayOfProfileAttribute"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Relations" type="tns:ArrayOfProfileRelation"/>
					</xsd:sequence>
					<xsd:attribute name="ReferenceId" type="xsd:int" use="required"/>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Entity" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProfileAttribute">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Attribute" type="tns:ProfileAttribute"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProfileAttribute">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="Value" nillable="true" type="tns:ProfileAttributeValue"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ProfileAttributeValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfString4"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProfileRelation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Relation" type="tns:ProfileRelation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProfileRelation">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="Value" nillable="true" type="tns:ProfileRelationValue"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ProfileRelationValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Values" type="tns:ArrayOfProfileRelationValueValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProfileRelationValueValue">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Value" type="tns:ProfileRelationValueValue"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProfileRelationValueValue">
					<xsd:attribute name="ProfileInstanceReference" type="xsd:int" use="required"/>
					<xsd:attribute name="StaticInstanceEntity" type="xsd:string"/>
					<xsd:attribute name="StaticInstanceReference" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="SpecificationDocument">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Fragments" type="tns:ArrayOfFragment"/>
							</xsd:sequence>
							<xsd:attribute name="Id" type="xsd:string"/>
							<xsd:attribute name="Type" type="xsd:string"/>
							<xsd:attribute name="Author" type="xsd:string"/>
							<xsd:attribute name="ExportDate" type="xsd:dateTime" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFragment">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Fragment" type="tns:Fragment"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Fragment">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Specifications" type="tns:ArrayOfSpecification"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Children" type="tns:ArrayOfFragmentChild"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:string"/>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfSpecification">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Specification" type="tns:Specification"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Specification">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="References" type="tns:ArrayOfString3"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Links" type="tns:ArrayOfSpecificationLink"/>
					</xsd:sequence>
					<xsd:attribute name="Id" type="xsd:string"/>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="FunctionalName" type="xsd:string"/>
					<xsd:attribute name="Type" type="xsd:string"/>
					<xsd:attribute name="Content" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfSpecificationLink">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Link" type="tns:SpecificationLink"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SpecificationLink">
					<xsd:attribute name="DocumentId" type="xsd:string"/>
					<xsd:attribute name="SpecificationId" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfFragmentChild">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Child" type="tns:FragmentChild"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="FragmentChild">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Fragment" type="tns:Fragment"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SpecificationImplementation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ReferenceImplementations" type="tns:ArrayOfReferenceImplementation"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="LinkedElementSets" type="tns:ArrayOfLinkedElementSet"/>
							</xsd:sequence>
							<xsd:attribute name="SpecificationDocument" type="xsd:string"/>
							<xsd:attribute name="Implemented" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfReferenceImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="ReferenceImplementation" type="tns:ReferenceImplementation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ReferenceImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DisplayText" type="tns:ArrayOfMultiLingualText"/>
					</xsd:sequence>
					<xsd:attribute name="Text" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfLinkedElementSet">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="LinkedElementSet" type="tns:LinkedElementSet"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="LinkedElementSet" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="LinkedElements" type="tns:ArrayOfLinkedElement"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfLinkedElement">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="LinkedElement" type="tns:LinkedElement"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="LinkedElement">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ElementKey" type="tns:ElementKey"/>
					</xsd:sequence>
					<xsd:attribute name="Description" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="LinkedProjectElement">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:LinkedElement">
							<xsd:attribute name="Project" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ModuleLinkSet">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:LinkedElementSet"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="GlobalElementLinkSet">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:LinkedElementSet"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ModuleElementLinkSet">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:LinkedElementSet">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ModuleKey" type="tns:ModuleKey"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DashboardPage">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Columns" type="tns:DashboardColumn"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventContext" type="tns:ArrayOfString2"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="Event" nillable="true" type="tns:DashboardEventType"/>
							</xsd:sequence>
							<xsd:attribute name="Layout" type="tns:DashboardLayoutType" use="required"/>
							<xsd:attribute name="Menu" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DashboardColumn">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Widgets" type="tns:ArrayOfDashboardWidget"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDashboardWidget">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Widget" type="tns:DashboardWidget"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DashboardWidget" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DashboardFlowWidget">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DashboardWidget">
							<xsd:attribute name="ProjectName" type="xsd:string"/>
							<xsd:attribute name="FlowName" type="xsd:string"/>
							<xsd:attribute name="VersionName" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DashboardShortcutWidget">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DashboardWidget">
							<xsd:attribute name="ShortcutName" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DashboardTaskWidget">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:DashboardWidget"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString2">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Context" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="DashboardEventType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="OpenCase"/>
						<xsd:enumeration value="StartCase"/>
						<xsd:enumeration value="StartTask"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:simpleType name="DashboardLayoutType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="SingleColumn"/>
						<xsd:enumeration value="TwoEqualColumns"/>
						<xsd:enumeration value="LeftSidebar"/>
						<xsd:enumeration value="RightSidebar"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="DashboardMenu">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ModuleElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Items" type="tns:DashboardMenuItem"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="DashboardMenuItem">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Roles" type="tns:ArrayOfString1"/>
					</xsd:sequence>
					<xsd:attribute name="DisplayText" type="xsd:string"/>
					<xsd:attribute name="Page" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="GlobalElement" abstract="true">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Element"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContainerType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Parameters" type="tns:ArrayOfParameter"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventDefinitions" type="tns:ArrayOfEventDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="DefaultContentStyle" type="xsd:string"/>
							<xsd:attribute name="Dynamic" type="xsd:boolean" use="required"/>
							<xsd:attribute name="HasContainment" type="xsd:boolean" use="required"/>
							<xsd:attribute name="ThrowsDefaultEvent" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Parameter" type="tns:Parameter"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Parameter" abstract="true">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="MyDescription">
							<xsd:complexType mixed="true">
								<xsd:sequence>
									<xsd:any/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Description" type="xsd:string"/>
					<xsd:attribute name="Required" type="xsd:boolean" use="required"/>
					<xsd:attribute name="MultiValued" type="xsd:boolean" use="required"/>
					<xsd:attribute name="HasKeys" type="xsd:boolean" use="required"/>
					<xsd:attribute name="Direction" type="tns:ParameterDirection" use="required"/>
				</xsd:complexType>
				<xsd:simpleType name="ParameterDirection">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="BiDirectional"/>
						<xsd:enumeration value="Input"/>
						<xsd:enumeration value="Output"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="DomainParameter">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Parameter">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="DomainValues" type="tns:ArrayOfString14"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString14">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="DomainValue" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ExpressionParameter">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Parameter">
							<xsd:attribute name="ExpectedDataType" type="tns:ExpressionDataType" use="required"/>
							<xsd:attribute name="MultivaluedResult" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="ExpressionDataType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Any"/>
						<xsd:enumeration value="Entity"/>
						<xsd:enumeration value="Boolean"/>
						<xsd:enumeration value="String"/>
						<xsd:enumeration value="Number"/>
						<xsd:enumeration value="Date"/>
						<xsd:enumeration value="DateTime"/>
						<xsd:enumeration value="Percentage"/>
						<xsd:enumeration value="Currency"/>
						<xsd:enumeration value="Integer"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="GlobalElementParameter">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Parameter">
							<xsd:attribute name="GlobalElementType" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ModuleElementParameter">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Parameter">
							<xsd:attribute name="ModuleElementType" type="xsd:string"/>
							<xsd:attribute name="ModuleType" type="xsd:string"/>
							<xsd:attribute name="AllowsInteractionModuleSelection" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="PrimitiveParameter">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Parameter">
							<xsd:attribute name="PrimitiveType" type="tns:DataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfEventDefinition">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="EventDefinition" type="tns:EventDefinition"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="EventDefinition">
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Type" type="tns:FlowEventType" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="PortalMessage">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PortalMessageDataFields" type="tns:ArrayOfPortalMessageDataField"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfPortalMessageDataField">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="PortalMessageDataField" type="tns:PortalMessageDataField"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="PortalMessageDataField">
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="DataType" type="tns:DataType" use="required"/>
					<xsd:attribute name="Required" type="xsd:boolean" use="required"/>
					<xsd:attribute name="AllowMultivalued" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="CustomSchemaElement">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Parameters" type="tns:ArrayOfParameter"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="QualifiedName" type="tns:QualifiedName"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Xsd" type="xsd:base64Binary"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="MaskType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="BaseTypes" type="tns:ArrayOfDataType"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Parameters" type="tns:ArrayOfMaskTypeParameter"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfDataType">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="BaseType" type="tns:DataType"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfMaskTypeParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Parameter" type="tns:MaskTypeParameter"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="MaskTypeParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Description" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Required" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="ServiceType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Parameters" type="tns:ArrayOfParameter"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="EventDefinitions" type="tns:ArrayOfEventDefinition"/>
							</xsd:sequence>
							<xsd:attribute name="ThrowsDefaultEvent" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ValidationRuleType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ParameterDescription" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Format">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Example" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="FormatString" type="xsd:string"/>
							</xsd:sequence>
							<xsd:attribute name="BaseType" type="tns:DataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ContentStyle">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Restrictions" type="tns:ArrayOfString13"/>
							</xsd:sequence>
							<xsd:attribute name="IsRestricted" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfString13">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Restriction" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Mask">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Example" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Parameters" type="tns:ArrayOfMaskParameter"/>
							</xsd:sequence>
							<xsd:attribute name="MaskType" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfMaskParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Parameter" type="tns:MaskParameter"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="MaskParameter">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Value" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="Name" type="xsd:string"/>
				</xsd:complexType>
				<xsd:complexType name="PresentationStyle">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:attribute name="IsAllowedOnDocuments" type="xsd:boolean" use="required"/>
							<xsd:attribute name="IsAllowedOnPages" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Channel">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Team">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="AssetType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Formats" type="tns:ArrayOfAssetFormat"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfAssetFormat">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Format" type="tns:AssetFormat"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="AssetFormat">
					<xsd:attribute name="Name" type="xsd:string"/>
					<xsd:attribute name="Required" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="FlowType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Role">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement"/>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProcessType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Restrictions" type="tns:ArrayOfString13"/>
							</xsd:sequence>
							<xsd:attribute name="AllowImplementation" type="xsd:boolean" use="required"/>
							<xsd:attribute name="IsRestricted" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Resource">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Data" type="tns:ResourceData"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ResourceData" abstract="true"/>
				<xsd:complexType name="CsvData">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ResourceData">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Data" type="xsd:base64Binary"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="ColumnDelimiter" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="TextQualifier" type="xsd:string"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="Charset" nillable="true" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Columns" type="tns:ArrayOfCsvDataColumn"/>
							</xsd:sequence>
							<xsd:attribute name="ColumnDelimiterType" type="tns:ColumnDelimiterType"/>
							<xsd:attribute name="ExternalData" type="xsd:boolean"/>
							<xsd:attribute name="SkipFirstRow" type="xsd:boolean"/>
							<xsd:attribute name="FileName" type="xsd:string"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfCsvDataColumn">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="Column">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Name" type="xsd:string"/>
									<xsd:element minOccurs="1" maxOccurs="1" name="DataTypeSpecified" type="xsd:boolean"/>
								</xsd:sequence>
								<xsd:attribute name="Format" type="xsd:string"/>
								<xsd:attribute name="Width" type="xsd:int"/>
								<xsd:attribute name="DataType" type="tns:DataType"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="ColumnDelimiterType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Delimited"/>
						<xsd:enumeration value="FixedWidth"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="GlobalParameter">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:attribute name="ParameterType" type="tns:GlobalParameterType" use="required"/>
							<xsd:attribute name="PrimitiveDataType" type="tns:DataType" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="FieldType">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:GlobalElement">
							<xsd:sequence>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="Output" type="tns:FieldTypeOutput"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="AttributeDataType" type="tns:DataType"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="PreconditionAvailable" type="xsd:boolean"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="ReadonlyAvailable" type="xsd:boolean"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="RequiredAvailable" type="xsd:boolean"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="RefreshAvailable" type="xsd:boolean"/>
								<xsd:element minOccurs="1" maxOccurs="1" form="unqualified" name="LengthAvailable" type="xsd:boolean"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="PresentationStyles" type="tns:FieldTypeFormatDefinition"/>
								<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Parameters" type="tns:ArrayOfGlobalParameterReferenceListGlobalParameterReference"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:simpleType name="FieldTypeOutput">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Attribute"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfGlobalParameterReferenceListGlobalParameterReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" form="unqualified" name="GlobalParameterReference">
							<xsd:complexType>
								<xsd:attribute name="Name" type="xsd:string"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="CreateBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="tns:Branch"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="message" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CreateBranchResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="CreateFeatureBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="basedOnBranch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="tns:Branch"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CreateFeatureBranchResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="CreateFeatureBranchOnRevision">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revision" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="tns:Branch"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CreateFeatureBranchOnRevisionResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="UpdateBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="originalName" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="tns:Branch"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="UpdateBranchResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="DeleteBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="DeleteBranchResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="Commit">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="commitMessage" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CommitResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="GetStatus">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetStatusResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetStatusResult" type="tns:BranchStatus"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="BranchStatus">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="TipRevision" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="WorkingRevision" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="Commitable" type="xsd:boolean"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="Conflicts" type="tns:ConflictReference"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="Changes" type="tns:ElementChange"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="MergeRevisions" type="tns:Revision"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ConflictReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ContentConflict" type="tns:ContentConflict"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="DuplicateConflict" type="tns:DuplicateConflict"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="DeleteConflict" type="tns:DeleteConflict"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ModuleConflict" type="tns:ModuleConflict"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ContentConflict">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="OriginalReference" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="CurrentReference" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ThisElement" type="tns:ElementReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="OtherElement" type="tns:ElementReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ElementKeyReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Global" type="tns:GlobalKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ModuleElement" type="tns:ModuleElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:ModuleKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="tns:ProjectKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Package" type="tns:PackageKeyReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="GlobalKeyReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="tns:ProjectKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Key" type="tns:GlobalElementKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ModuleElementKeyReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="tns:ProjectKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:ModuleKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Key" type="tns:ModuleElementKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ModuleKeyReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="tns:ProjectKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Key" type="tns:ModuleKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProjectKeyReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Key" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="PackageKeyReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Key" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ElementReference">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Global" type="tns:GlobalElement"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ModuleElement" type="tns:ModuleElement"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:Module"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="tns:Project"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Package" type="tns:LibraryPackage"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DuplicateConflict">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="OriginalReference" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="CurrentThis" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="CurrentOther" type="tns:ElementKeyReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DeleteConflict">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="OriginalReference" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="CurrentReference" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="DeletedThis" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ModuleConflict">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="OriginalReference" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="CurrentReference" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="DeletedThis" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ElementChange">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:ChangedElement">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="unbounded" name="Authors" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ChangedElement">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="Type" type="tns:ChangeType"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="OriginalKey" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="CurrentKey" type="tns:ElementKeyReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="ChangeType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Create"/>
						<xsd:enumeration value="Update"/>
						<xsd:enumeration value="Delete"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="Revision">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="CommitTime" type="xsd:dateTime"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="RevisionId" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Message" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Committer" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="Tags" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Parent" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="MergeParent" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetStatusMaxDepth">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="maxMergedRevisionsDepth" type="xsd:int"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetStatusMaxDepthResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetStatusMaxDepthResult" type="tns:BranchStatus"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevision">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisionResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetRevisionResult" type="tns:Revision"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisionDescriptor">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisionDescriptorResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetRevisionDescriptorResult" type="tns:Revision"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisions">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="startIndex" type="xsd:int"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:int"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="taggedOnly" type="xsd:boolean"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="includeMergeRevisions" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisionsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetRevisionsResult" type="tns:ArrayOfRevision"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfRevision">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="Revision" nillable="true" type="tns:Revision"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetRevisionsWithLeveledMergeRevisions">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="startIndex" type="xsd:int"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:int"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="taggedOnly" type="xsd:boolean"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="level" type="xsd:int"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisionsWithLeveledMergeRevisionsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetRevisionsWithLeveledMergeRevisionsResult" type="tns:ArrayOfRevision"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisionChanges">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revision" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRevisionChangesResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetRevisionChangesResult" type="tns:ArrayOfElementChange"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfElementChange">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ElementChange" nillable="true" type="tns:ElementChange"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="MergeRevision">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="targetBranch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="sourceBranch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="discard" type="xsd:boolean"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="preview" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="MergeRevisionResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="MergeRevisionResult" type="tns:MergeResult"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="MergeResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="Conflicts" type="tns:ConflictReference"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="Changes" type="tns:ChangedElement"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="MergeBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="targetBranch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="sourceBranch" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="discard" type="xsd:boolean"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="preview" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="MergeBranchResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="MergeBranchResult" type="tns:MergeResult"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="SetTags">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="tags" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="SetTagsResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="GetBranchTypes">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetBranchTypesResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetBranchTypesResult" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetBranchType">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branchType" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetBranchTypeResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetBranchTypeResult" type="tns:BranchType"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CreateBranchType">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branchType" type="tns:BranchType"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CreateBranchTypeResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="UpdateBranchType">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="originalName" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branchType" type="tns:BranchType"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="UpdateBranchTypeResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="DeleteBranchType">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branchType" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="DeleteBranchTypeResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="GetAllModuleElements">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetAllModuleElementsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetAllModuleElementsResult" type="tns:ArrayOfModuleElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfModuleElementKey">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ModuleElementKey" nillable="true" type="tns:ModuleElementKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetModuleElements">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="elementType" type="tns:ModuleElementType"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetModuleElementsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetModuleElementsResult" type="tns:ArrayOfModuleElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetMostSpecificModuleElement">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="moduleElement" type="tns:ModuleElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetMostSpecificModuleElementResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetMostSpecificModuleElementResult" type="tns:ModuleElementImplementation"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ModuleElementImplementation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:ModuleKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ModuleElement" type="tns:ModuleElement"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetModuleElement">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="moduleElement" type="tns:ModuleElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetModuleElementResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetModuleElementResult" type="tns:ModuleElement"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetAllGlobalElements">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetAllGlobalElementsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetAllGlobalElementsResult" type="tns:ArrayOfGlobalElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfGlobalElementKey">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="GlobalElementKey" nillable="true" type="tns:GlobalElementKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetGlobalElements">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="elementType" type="tns:GlobalElementType"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetGlobalElementsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetGlobalElementsResult" type="tns:ArrayOfGlobalElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetGlobalElement">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="globalElement" type="tns:GlobalElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetGlobalElementResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetGlobalElementResult" type="tns:GlobalElement"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="FindGlobalElements">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="elementType" type="tns:GlobalElementType"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="FindGlobalElementsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="FindGlobalElementsResult" type="tns:ArrayOfGlobalElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="FindGlobalElementProject">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="globalElement" type="tns:GlobalElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="FindGlobalElementProjectResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="FindGlobalElementProjectResult" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetProjects">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="includeLibraries" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetProjectsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetProjectsResult" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetProjectsForRevision">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="includeLibraries" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetProjectsForRevisionResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetProjectsForRevisionResult" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetProject">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetProjectResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetProjectResult" type="tns:Project"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ValidateProject">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ValidateProjectResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="1" maxOccurs="1" name="ValidateProjectResult" type="tns:ProjectValidationResult"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ProjectValidationResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ValidationMessages" type="tns:ArrayOfElementValidationResult"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="InteractionMessages" type="tns:ArrayOfExecutionValidationResult"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="HasBlockingValidation" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfElementValidationResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ElementValidationResult" type="tns:ElementValidationResult"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ElementValidationResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Element" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ValidationReport" type="tns:ArrayOfPropertyValidationReport"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfPropertyValidationReport">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="PropertyValidationReport" nillable="true" type="tns:PropertyValidationReport"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="PropertyValidationReport">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="HasBlockingValidation" type="xsd:boolean"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Property" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Messages" type="tns:ArrayOfString"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfExecutionValidationResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ExecutionValidationResult" nillable="true" type="tns:ExecutionValidationResult"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ExecutionValidationResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ErrorLevel" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ElementType" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ElementName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Message" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetPackages">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetPackagesResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetPackagesResult" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetPackage">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="packageName" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetPackageResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetPackageResult" type="tns:LibraryPackage"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetModules">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetModulesResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetModulesResult" type="tns:ArrayOfModuleKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfModuleKey">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ModuleKey" nillable="true" type="tns:ModuleKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetModule">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetModuleResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetModuleResult" type="tns:Module"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="FindModuleProject">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="FindModuleProjectResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="FindModuleProjectResult" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ApplyOperations">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="operations" type="tns:OperationSet"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="OperationSet">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Operations" type="tns:ArrayOfOperationEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfOperationEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="OperationEntry" nillable="true" type="tns:OperationEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="OperationEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="GlobalOperation" type="tns:GlobalOperation"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ModuleElementOperation" type="tns:ModuleElementOperation"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ModuleOperation" type="tns:ModuleOperation"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ProjectOperation" type="tns:ProjectOperation"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="PackageOperation" type="tns:PackageOperation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="GlobalOperation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Operation">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="OriginalKey" type="tns:GlobalElementKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="GlobalElement" type="tns:GlobalElement"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="Operation" abstract="true">
					<xsd:attribute name="Type" type="tns:ChangeType" use="required"/>
					<xsd:attribute name="GenerateLayout" type="xsd:boolean" use="required"/>
				</xsd:complexType>
				<xsd:complexType name="PackageOperation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Operation">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="OriginalName" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="Package" type="tns:LibraryPackage"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ProjectOperation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Operation">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="OriginalName" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="tns:Project"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ModuleOperation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Operation">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="OriginalKey" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:Module"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ModuleElementOperation">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:Operation">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="xsd:string"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:ModuleKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="OriginalKey" type="tns:ModuleElementKey"/>
								<xsd:element minOccurs="0" maxOccurs="1" name="ModuleElement" type="tns:ModuleElement"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:element name="ApplyOperationsResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="EvaluateExpression">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="expression" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="EvaluateExpressionResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="EvaluateExpressionResult" type="tns:ExpressionEvaluationResult"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ExpressionEvaluationResult">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsValid" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="DataType" type="tns:ExpressionDataType"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Messages" type="tns:ArrayOfExpressionValidationMessage"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="References" type="tns:ArrayOfModuleElementIdentifier"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfExpressionValidationMessage">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ExpressionValidationMessage" nillable="true" type="tns:ExpressionValidationMessage"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ExpressionValidationMessage">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="Type" type="tns:ExpressionValidationType"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="StartPosition" type="xsd:int"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="EndPosition" type="xsd:int"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Message" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="ExpressionValidationType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Error"/>
						<xsd:enumeration value="Warning"/>
						<xsd:enumeration value="Deprecation"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:complexType name="ArrayOfModuleElementIdentifier">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ModuleElementIdentifier" nillable="true" type="tns:ModuleElementIdentifier"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ModuleElementIdentifier">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Module" type="tns:ModuleKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" form="unqualified" name="Element" type="tns:ModuleElementKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetUsedByElementsForModuleElement">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="moduleElement" type="tns:ModuleElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetUsedByElementsForModuleElementResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetUsedByElementsForModuleElementResult" type="tns:ArrayOfDependency"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfDependency">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="Dependency" nillable="true" type="tns:Dependency"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="Dependency">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="ReferenceType" type="tns:ReferenceType"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="From" type="tns:ElementKeyReference"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="To" type="tns:ElementKeyReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="ReferenceType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Expression"/>
						<xsd:enumeration value="DynamicText"/>
						<xsd:enumeration value="Type"/>
						<xsd:enumeration value="Usage"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:element name="GetUsedByElementsForGlobalElement">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="globalElement" type="tns:GlobalElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetUsedByElementsForGlobalElementResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetUsedByElementsForGlobalElementResult" type="tns:ArrayOfDependency"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetUseElementsForModuleElement">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="module" type="tns:ModuleKey"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="moduleElement" type="tns:ModuleElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetUseElementsForModuleElementResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetUseElementsForModuleElementResult" type="tns:ArrayOfDependency"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetUseElementsForGlobalElement">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="globalElement" type="tns:GlobalElementKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetUseElementsForGlobalElementResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetUseElementsForGlobalElementResult" type="tns:ArrayOfDependency"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Search">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="parameters" type="tns:SearchParameters"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="SearchParameters">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="SearchType" type="tns:SearchType"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="Repository" nillable="true" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="Branch" nillable="true" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="tns:ModuleKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="SearchString" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="SearchInNames" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="SearchInDependencies" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IncludeGlobalElements" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IncludeModuleElements" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="FullText" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="CaseSensitive" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:simpleType name="SearchType">
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Branch"/>
						<xsd:enumeration value="ProjectStructure"/>
						<xsd:enumeration value="SingleProject"/>
						<xsd:enumeration value="ModuleScope"/>
					</xsd:restriction>
				</xsd:simpleType>
				<xsd:element name="SearchResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="SearchResult" type="tns:ArrayOfSearchResultItem"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfSearchResultItem">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="SearchResultItem" nillable="true" type="tns:SearchResultItem"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SearchResultItem">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Element" type="tns:ElementKeyReference"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="DependencySearchResultItem">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:SearchResultItem">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="ToElement" type="tns:ElementKeyReference"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:complexType name="ElementSearchResultItem">
					<xsd:complexContent mixed="false">
						<xsd:extension base="tns:SearchResultItem">
							<xsd:sequence>
								<xsd:element minOccurs="0" maxOccurs="1" name="Excerpt" type="xsd:string"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
				<xsd:element name="StartAdvancedSearch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="parameters" type="tns:AdvancedSearchParameters"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="AdvancedSearchParameters">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="ElementName" nillable="true" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ElementTypes" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsInExposedFlow" nillable="true" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsSpecialized" nillable="true" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsFullTextEnabled" nillable="true" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="SearchDepth" nillable="true" type="xsd:int"/>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="SearchIn" type="tns:SearchLocation"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="SearchLocation">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Repository" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Branch" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="StartAdvancedSearchResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="StartAdvancedSearchResult" type="tns:SearchIdentifier"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="SearchIdentifier">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="SearchId" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="StopAdvancedSearch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="searchId" type="tns:SearchIdentifier"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="StopAdvancedSearchResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="GetAdvancedSearchResults">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="searchId" type="tns:SearchIdentifier"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetAdvancedSearchResultsResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetAdvancedSearchResultsResult" type="tns:AdvancedSearchResults"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="AdvancedSearchResults">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ResultEntries" type="tns:ArrayOfResultEntry"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsSearchFinished" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfResultEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ResultEntry" nillable="true" type="tns:ResultEntry"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ResultEntry">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Repository" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Branch" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Project" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Elements" type="tns:ArrayOfElementDetails"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Error" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Info" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfElementDetails">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ElementDetails" nillable="true" type="tns:ElementDetails"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ElementDetails">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="ElementName" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ElementType" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Module" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsInExposedFlow" nillable="true" type="xsd:boolean"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsSpecialized" nillable="true" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetLibraries">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetLibrariesResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetLibrariesResult" type="tns:ArrayOfLibrarySearchResult"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ArrayOfLibrarySearchResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="LibrarySearchResult" nillable="true" type="tns:LibrarySearchResult"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="LibrarySearchResult">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Name" type="xsd:string"/>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsExternal" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="ExportProject">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="encrypt" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportProjectResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportProjectResult" type="tns:StudioExport"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="StudioExport">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Content" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="ContentType" type="xsd:string"/>
				</xsd:complexType>
				<xsd:element name="ExportProjectRevision">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="encrypt" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportProjectRevisionResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportProjectRevisionResult" type="tns:StudioExport"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportProjectWithMetadata">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="encrypt" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportProjectWithMetadataResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportProjectWithMetadataResult" type="tns:StudioExportWithMetadata"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="StudioExportWithMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Export" type="tns:StudioExport"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Metadata" type="tns:ProjectMetadata"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProjectMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Libraries" type="tns:ArrayOfLibraryInfo"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="WebServices" type="tns:ArrayOfWebServiceInfo"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfLibraryInfo">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="LibraryInfo" nillable="true" type="tns:LibraryInfo"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="LibraryInfo">
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="IsExternal" type="xsd:boolean"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Name" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Version" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="ReleaseNotes" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfWebServiceInfo">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="WebServiceInfo" nillable="true" type="tns:WebServiceInfo"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="WebServiceInfo">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Name" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Type" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="EndPoint" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="ExportProjectRevisionWithMetadata">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="revisionId" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="project" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="encrypt" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportProjectRevisionWithMetadataResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportProjectRevisionWithMetadataResult" type="tns:StudioExportWithMetadata"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportBranchResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportBranchResult" type="tns:StudioExport"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportLibrary">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="library" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportLibraryResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportLibraryResult" type="tns:StudioExport"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportPackage">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="packageName" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExportPackageResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ExportPackageResult" type="tns:StudioExport"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ImportBranch">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="data" type="xsd:string"/>
							<xsd:element minOccurs="1" maxOccurs="1" name="deleteUnknownElements" type="xsd:boolean"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ImportBranchResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="ImportLibrary">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="arguments" type="tns:ProjectImportArguments"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="base64String" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="ProjectImportArguments">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Arguments" type="tns:ArrayOfProjectImportArgument"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProjectImportArgument">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ProjectImportArgument" nillable="true" type="tns:ProjectImportArgument"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ProjectImportArgument">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Key" type="tns:ProjectKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Name" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="ImportLibraryResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="ReadLibraryMetadata">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="branch" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="base64String" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ReadLibraryMetadataResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="ReadLibraryMetadataResult" type="tns:PackageMetadata"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:complexType name="PackageMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Libraries" type="tns:ArrayOfLibraryMetadata"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Examples" type="tns:ArrayOfProjectKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfLibraryMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="LibraryMetadata" nillable="true" type="tns:LibraryMetadata"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="LibraryMetadata">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="1" name="Library" type="tns:ProjectKey"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Version" type="xsd:string"/>
						<xsd:element minOccurs="0" maxOccurs="1" name="Description" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:complexType name="ArrayOfProjectKey">
					<xsd:sequence>
						<xsd:element minOccurs="0" maxOccurs="unbounded" name="ProjectKey" nillable="true" type="tns:ProjectKey"/>
					</xsd:sequence>
				</xsd:complexType>
				<xsd:element name="GetRepositories">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="GetRepositoriesResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetRepositoriesResult" type="tns:ArrayOfString"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRepository">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GetRepositoryResponse">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="GetRepositoryResult" type="tns:Repository"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CreateRepository">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="tns:Repository"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CreateRepositoryResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="UpdateRepository">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="originalName" type="xsd:string"/>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="tns:Repository"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="UpdateRepositoryResponse">
					<xsd:complexType/>
				</xsd:element>
				<xsd:element name="DeleteRepository">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="1" name="repository" type="xsd:string"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="DeleteRepositoryResponse">
					<xsd:complexType/>
				</xsd:element>
			</xsd:schema>
		</wsdl:types>
		<wsdl:message name="ManagementService_ImportSpecification_InputMessage">
			<wsdl:part name="parameters" element="tns:ImportSpecification"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ImportSpecification_OutputMessage">
			<wsdl:part name="parameters" element="tns:ImportSpecificationResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteUnitTests_InputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteUnitTests"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteUnitTests_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteUnitTestsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteUnitTestsForRevision_InputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteUnitTestsForRevision"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteUnitTestsForRevision_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteUnitTestsForRevisionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteAllUnitTests_InputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteAllUnitTests"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteAllUnitTests_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteAllUnitTestsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteAllUnitTestsForRevision_InputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteAllUnitTestsForRevision"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExecuteAllUnitTestsForRevision_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExecuteAllUnitTestsForRevisionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportAllUnitTestCoverage_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportAllUnitTestCoverage"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportAllUnitTestCoverage_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportAllUnitTestCoverageResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_RetrieveSubscriptionStatus_InputMessage">
			<wsdl:part name="parameters" element="tns:RetrieveSubscriptionStatus"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_RetrieveSubscriptionStatus_OutputMessage">
			<wsdl:part name="parameters" element="tns:RetrieveSubscriptionStatusResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetDataSource_InputMessage">
			<wsdl:part name="parameters" element="tns:GetDataSource"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetDataSource_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetDataSourceResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_SetDataSource_InputMessage">
			<wsdl:part name="parameters" element="tns:SetDataSource"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_SetDataSource_OutputMessage">
			<wsdl:part name="parameters" element="tns:SetDataSourceResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_RetrieveLog_InputMessage">
			<wsdl:part name="parameters" element="tns:RetrieveLog"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_RetrieveLog_OutputMessage">
			<wsdl:part name="parameters" element="tns:RetrieveLogResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_SendMessage_InputMessage">
			<wsdl:part name="parameters" element="tns:SendMessage"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_SendMessage_OutputMessage">
			<wsdl:part name="parameters" element="tns:SendMessageResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_Logout_InputMessage">
			<wsdl:part name="parameters" element="tns:Logout"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_Logout_OutputMessage">
			<wsdl:part name="parameters" element="tns:LogoutResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_RetrieveServerInformation_InputMessage">
			<wsdl:part name="parameters" element="tns:RetrieveServerInformation"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_RetrieveServerInformation_OutputMessage">
			<wsdl:part name="parameters" element="tns:RetrieveServerInformationResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetCurrentIdentity_InputMessage">
			<wsdl:part name="parameters" element="tns:GetCurrentIdentity"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetCurrentIdentity_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetCurrentIdentityResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_IsInRole_InputMessage">
			<wsdl:part name="parameters" element="tns:IsInRole"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_IsInRole_OutputMessage">
			<wsdl:part name="parameters" element="tns:IsInRoleResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_HasModuleWriteAccess_InputMessage">
			<wsdl:part name="parameters" element="tns:HasModuleWriteAccess"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_HasModuleWriteAccess_OutputMessage">
			<wsdl:part name="parameters" element="tns:HasModuleWriteAccessResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetLicenseData_InputMessage">
			<wsdl:part name="parameters" element="tns:GetLicenseData"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetLicenseData_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetLicenseDataResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranches_InputMessage">
			<wsdl:part name="parameters" element="tns:GetBranches"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranches_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetBranchesResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:GetBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:CreateBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:CreateBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateFeatureBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:CreateFeatureBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateFeatureBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:CreateFeatureBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateFeatureBranchOnRevision_InputMessage">
			<wsdl:part name="parameters" element="tns:CreateFeatureBranchOnRevision"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateFeatureBranchOnRevision_OutputMessage">
			<wsdl:part name="parameters" element="tns:CreateFeatureBranchOnRevisionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_UpdateBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:UpdateBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_UpdateBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:UpdateBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_DeleteBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:DeleteBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_DeleteBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:DeleteBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_Commit_InputMessage">
			<wsdl:part name="parameters" element="tns:Commit"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_Commit_OutputMessage">
			<wsdl:part name="parameters" element="tns:CommitResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetStatus_InputMessage">
			<wsdl:part name="parameters" element="tns:GetStatus"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetStatus_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetStatusResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetStatusMaxDepth_InputMessage">
			<wsdl:part name="parameters" element="tns:GetStatusMaxDepth"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetStatusMaxDepth_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetStatusMaxDepthResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevision_InputMessage">
			<wsdl:part name="parameters" element="tns:GetRevision"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevision_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisionDescriptor_InputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionDescriptor"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisionDescriptor_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionDescriptorResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisions_InputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisions"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisions_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisionsWithLeveledMergeRevisions_InputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionsWithLeveledMergeRevisions"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisionsWithLeveledMergeRevisions_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionsWithLeveledMergeRevisionsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisionChanges_InputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionChanges"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRevisionChanges_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetRevisionChangesResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_MergeRevision_InputMessage">
			<wsdl:part name="parameters" element="tns:MergeRevision"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_MergeRevision_OutputMessage">
			<wsdl:part name="parameters" element="tns:MergeRevisionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_MergeBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:MergeBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_MergeBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:MergeBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_SetTags_InputMessage">
			<wsdl:part name="parameters" element="tns:SetTags"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_SetTags_OutputMessage">
			<wsdl:part name="parameters" element="tns:SetTagsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranchTypes_InputMessage">
			<wsdl:part name="parameters" element="tns:GetBranchTypes"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranchTypes_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetBranchTypesResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranchType_InputMessage">
			<wsdl:part name="parameters" element="tns:GetBranchType"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetBranchType_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetBranchTypeResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateBranchType_InputMessage">
			<wsdl:part name="parameters" element="tns:CreateBranchType"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateBranchType_OutputMessage">
			<wsdl:part name="parameters" element="tns:CreateBranchTypeResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_UpdateBranchType_InputMessage">
			<wsdl:part name="parameters" element="tns:UpdateBranchType"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_UpdateBranchType_OutputMessage">
			<wsdl:part name="parameters" element="tns:UpdateBranchTypeResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_DeleteBranchType_InputMessage">
			<wsdl:part name="parameters" element="tns:DeleteBranchType"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_DeleteBranchType_OutputMessage">
			<wsdl:part name="parameters" element="tns:DeleteBranchTypeResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetAllModuleElements_InputMessage">
			<wsdl:part name="parameters" element="tns:GetAllModuleElements"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetAllModuleElements_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetAllModuleElementsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModuleElements_InputMessage">
			<wsdl:part name="parameters" element="tns:GetModuleElements"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModuleElements_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetModuleElementsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetMostSpecificModuleElement_InputMessage">
			<wsdl:part name="parameters" element="tns:GetMostSpecificModuleElement"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetMostSpecificModuleElement_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetMostSpecificModuleElementResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModuleElement_InputMessage">
			<wsdl:part name="parameters" element="tns:GetModuleElement"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModuleElement_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetModuleElementResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetAllGlobalElements_InputMessage">
			<wsdl:part name="parameters" element="tns:GetAllGlobalElements"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetAllGlobalElements_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetAllGlobalElementsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetGlobalElements_InputMessage">
			<wsdl:part name="parameters" element="tns:GetGlobalElements"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetGlobalElements_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetGlobalElementsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetGlobalElement_InputMessage">
			<wsdl:part name="parameters" element="tns:GetGlobalElement"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetGlobalElement_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetGlobalElementResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_FindGlobalElements_InputMessage">
			<wsdl:part name="parameters" element="tns:FindGlobalElements"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_FindGlobalElements_OutputMessage">
			<wsdl:part name="parameters" element="tns:FindGlobalElementsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_FindGlobalElementProject_InputMessage">
			<wsdl:part name="parameters" element="tns:FindGlobalElementProject"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_FindGlobalElementProject_OutputMessage">
			<wsdl:part name="parameters" element="tns:FindGlobalElementProjectResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetProjects_InputMessage">
			<wsdl:part name="parameters" element="tns:GetProjects"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetProjects_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetProjectsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetProjectsForRevision_InputMessage">
			<wsdl:part name="parameters" element="tns:GetProjectsForRevision"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetProjectsForRevision_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetProjectsForRevisionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetProject_InputMessage">
			<wsdl:part name="parameters" element="tns:GetProject"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetProject_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetProjectResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ValidateProject_InputMessage">
			<wsdl:part name="parameters" element="tns:ValidateProject"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ValidateProject_OutputMessage">
			<wsdl:part name="parameters" element="tns:ValidateProjectResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetPackages_InputMessage">
			<wsdl:part name="parameters" element="tns:GetPackages"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetPackages_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetPackagesResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetPackage_InputMessage">
			<wsdl:part name="parameters" element="tns:GetPackage"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetPackage_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetPackageResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModules_InputMessage">
			<wsdl:part name="parameters" element="tns:GetModules"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModules_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetModulesResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModule_InputMessage">
			<wsdl:part name="parameters" element="tns:GetModule"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetModule_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetModuleResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_FindModuleProject_InputMessage">
			<wsdl:part name="parameters" element="tns:FindModuleProject"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_FindModuleProject_OutputMessage">
			<wsdl:part name="parameters" element="tns:FindModuleProjectResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ApplyOperations_InputMessage">
			<wsdl:part name="parameters" element="tns:ApplyOperations"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ApplyOperations_OutputMessage">
			<wsdl:part name="parameters" element="tns:ApplyOperationsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_EvaluateExpression_InputMessage">
			<wsdl:part name="parameters" element="tns:EvaluateExpression"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_EvaluateExpression_OutputMessage">
			<wsdl:part name="parameters" element="tns:EvaluateExpressionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUsedByElementsForModuleElement_InputMessage">
			<wsdl:part name="parameters" element="tns:GetUsedByElementsForModuleElement"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUsedByElementsForModuleElement_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetUsedByElementsForModuleElementResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUsedByElementsForGlobalElement_InputMessage">
			<wsdl:part name="parameters" element="tns:GetUsedByElementsForGlobalElement"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUsedByElementsForGlobalElement_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetUsedByElementsForGlobalElementResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUseElementsForModuleElement_InputMessage">
			<wsdl:part name="parameters" element="tns:GetUseElementsForModuleElement"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUseElementsForModuleElement_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetUseElementsForModuleElementResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUseElementsForGlobalElement_InputMessage">
			<wsdl:part name="parameters" element="tns:GetUseElementsForGlobalElement"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetUseElementsForGlobalElement_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetUseElementsForGlobalElementResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_Search_InputMessage">
			<wsdl:part name="parameters" element="tns:Search"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_Search_OutputMessage">
			<wsdl:part name="parameters" element="tns:SearchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_StartAdvancedSearch_InputMessage">
			<wsdl:part name="parameters" element="tns:StartAdvancedSearch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_StartAdvancedSearch_OutputMessage">
			<wsdl:part name="parameters" element="tns:StartAdvancedSearchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_StopAdvancedSearch_InputMessage">
			<wsdl:part name="parameters" element="tns:StopAdvancedSearch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_StopAdvancedSearch_OutputMessage">
			<wsdl:part name="parameters" element="tns:StopAdvancedSearchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetAdvancedSearchResults_InputMessage">
			<wsdl:part name="parameters" element="tns:GetAdvancedSearchResults"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetAdvancedSearchResults_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetAdvancedSearchResultsResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetLibraries_InputMessage">
			<wsdl:part name="parameters" element="tns:GetLibraries"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetLibraries_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetLibrariesResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProject_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportProject"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProject_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportProjectResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProjectRevision_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportProjectRevision"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProjectRevision_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportProjectRevisionResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProjectWithMetadata_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportProjectWithMetadata"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProjectWithMetadata_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportProjectWithMetadataResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProjectRevisionWithMetadata_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportProjectRevisionWithMetadata"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportProjectRevisionWithMetadata_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportProjectRevisionWithMetadataResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportLibrary_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportLibrary"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportLibrary_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportLibraryResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportPackage_InputMessage">
			<wsdl:part name="parameters" element="tns:ExportPackage"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ExportPackage_OutputMessage">
			<wsdl:part name="parameters" element="tns:ExportPackageResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ImportBranch_InputMessage">
			<wsdl:part name="parameters" element="tns:ImportBranch"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ImportBranch_OutputMessage">
			<wsdl:part name="parameters" element="tns:ImportBranchResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ImportLibrary_InputMessage">
			<wsdl:part name="parameters" element="tns:ImportLibrary"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ImportLibrary_OutputMessage">
			<wsdl:part name="parameters" element="tns:ImportLibraryResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ReadLibraryMetadata_InputMessage">
			<wsdl:part name="parameters" element="tns:ReadLibraryMetadata"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_ReadLibraryMetadata_OutputMessage">
			<wsdl:part name="parameters" element="tns:ReadLibraryMetadataResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRepositories_InputMessage">
			<wsdl:part name="parameters" element="tns:GetRepositories"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRepositories_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetRepositoriesResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRepository_InputMessage">
			<wsdl:part name="parameters" element="tns:GetRepository"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_GetRepository_OutputMessage">
			<wsdl:part name="parameters" element="tns:GetRepositoryResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateRepository_InputMessage">
			<wsdl:part name="parameters" element="tns:CreateRepository"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_CreateRepository_OutputMessage">
			<wsdl:part name="parameters" element="tns:CreateRepositoryResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_UpdateRepository_InputMessage">
			<wsdl:part name="parameters" element="tns:UpdateRepository"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_UpdateRepository_OutputMessage">
			<wsdl:part name="parameters" element="tns:UpdateRepositoryResponse"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_DeleteRepository_InputMessage">
			<wsdl:part name="parameters" element="tns:DeleteRepository"/>
		</wsdl:message>
		<wsdl:message name="ManagementService_DeleteRepository_OutputMessage">
			<wsdl:part name="parameters" element="tns:DeleteRepositoryResponse"/>
		</wsdl:message>
		<wsdl:portType name="ManagementService">
			<wsdl:operation name="ImportSpecification">
				<wsdl:input wsaw:Action="ImportSpecification" message="tns:ManagementService_ImportSpecification_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ImportSpecificationResponse" message="tns:ManagementService_ImportSpecification_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExecuteUnitTests">
				<wsdl:input wsaw:Action="ExecuteUnitTest" message="tns:ManagementService_ExecuteUnitTests_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExecuteUnitTestsResponse" message="tns:ManagementService_ExecuteUnitTests_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExecuteUnitTestsForRevision">
				<wsdl:input wsaw:Action="ExecuteUnitTestForRevision" message="tns:ManagementService_ExecuteUnitTestsForRevision_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExecuteUnitTestsForRevisionResponse" message="tns:ManagementService_ExecuteUnitTestsForRevision_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExecuteAllUnitTests">
				<wsdl:input wsaw:Action="ExecuteAllUnitTests" message="tns:ManagementService_ExecuteAllUnitTests_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExecuteAllUnitTestsResponse" message="tns:ManagementService_ExecuteAllUnitTests_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExecuteAllUnitTestsForRevision">
				<wsdl:input wsaw:Action="ExecuteAllUnitTestsForRevision" message="tns:ManagementService_ExecuteAllUnitTestsForRevision_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExecuteAllUnitTestsForRevisionResponse" message="tns:ManagementService_ExecuteAllUnitTestsForRevision_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportAllUnitTestCoverage">
				<wsdl:input wsaw:Action="ExportAllUnitTestCoverage" message="tns:ManagementService_ExportAllUnitTestCoverage_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportAllUnitTestCoverageResponse" message="tns:ManagementService_ExportAllUnitTestCoverage_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="RetrieveSubscriptionStatus">
				<wsdl:input wsaw:Action="RetrieveSubscriptionInformation" message="tns:ManagementService_RetrieveSubscriptionStatus_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/RetrieveSubscriptionStatusResponse" message="tns:ManagementService_RetrieveSubscriptionStatus_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetDataSource">
				<wsdl:input wsaw:Action="GetDataSource" message="tns:ManagementService_GetDataSource_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetDataSourceResponse" message="tns:ManagementService_GetDataSource_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="SetDataSource">
				<wsdl:input wsaw:Action="SetDataSource" message="tns:ManagementService_SetDataSource_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/SetDataSourceResponse" message="tns:ManagementService_SetDataSource_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="RetrieveLog">
				<wsdl:input wsaw:Action="RetrieveLog" message="tns:ManagementService_RetrieveLog_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/RetrieveLogResponse" message="tns:ManagementService_RetrieveLog_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="SendMessage">
				<wsdl:input wsaw:Action="SendMessage" message="tns:ManagementService_SendMessage_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/SendMessageResponse" message="tns:ManagementService_SendMessage_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="Logout">
				<wsdl:input wsaw:Action="Logout" message="tns:ManagementService_Logout_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/LogoutResponse" message="tns:ManagementService_Logout_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="RetrieveServerInformation">
				<wsdl:input wsaw:Action="RetrieveServerStatus" message="tns:ManagementService_RetrieveServerInformation_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/RetrieveServerInformationResponse" message="tns:ManagementService_RetrieveServerInformation_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetCurrentIdentity">
				<wsdl:input wsaw:Action="GetCurrentIdentity" message="tns:ManagementService_GetCurrentIdentity_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetCurrentIdentityResponse" message="tns:ManagementService_GetCurrentIdentity_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="IsInRole">
				<wsdl:input wsaw:Action="IsInRole" message="tns:ManagementService_IsInRole_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/IsInRoleResponse" message="tns:ManagementService_IsInRole_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="HasModuleWriteAccess">
				<wsdl:input wsaw:Action="HasModuleWriteAccess" message="tns:ManagementService_HasModuleWriteAccess_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/HasModuleWriteAccessResponse" message="tns:ManagementService_HasModuleWriteAccess_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetLicenseData">
				<wsdl:input wsaw:Action="GetLicenseData" message="tns:ManagementService_GetLicenseData_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetLicenseDataResponse" message="tns:ManagementService_GetLicenseData_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetBranches">
				<wsdl:input wsaw:Action="GetBranches" message="tns:ManagementService_GetBranches_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetBranchesResponse" message="tns:ManagementService_GetBranches_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetBranch">
				<wsdl:input wsaw:Action="GetBranch" message="tns:ManagementService_GetBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetBranchResponse" message="tns:ManagementService_GetBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="CreateBranch">
				<wsdl:input wsaw:Action="CreateBranch" message="tns:ManagementService_CreateBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/CreateBranchResponse" message="tns:ManagementService_CreateBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="CreateFeatureBranch">
				<wsdl:input wsaw:Action="CreateFeatureBranch" message="tns:ManagementService_CreateFeatureBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/CreateFeatureBranchResponse" message="tns:ManagementService_CreateFeatureBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="CreateFeatureBranchOnRevision">
				<wsdl:input wsaw:Action="CreateFeatureBranchOnRevision" message="tns:ManagementService_CreateFeatureBranchOnRevision_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/CreateFeatureBranchOnRevisionResponse" message="tns:ManagementService_CreateFeatureBranchOnRevision_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="UpdateBranch">
				<wsdl:input wsaw:Action="UpdateBranch" message="tns:ManagementService_UpdateBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/UpdateBranchResponse" message="tns:ManagementService_UpdateBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="DeleteBranch">
				<wsdl:input wsaw:Action="DeleteBranch" message="tns:ManagementService_DeleteBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/DeleteBranchResponse" message="tns:ManagementService_DeleteBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="Commit">
				<wsdl:input wsaw:Action="Commit" message="tns:ManagementService_Commit_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/CommitResponse" message="tns:ManagementService_Commit_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetStatus">
				<wsdl:input wsaw:Action="GetStatus" message="tns:ManagementService_GetStatus_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetStatusResponse" message="tns:ManagementService_GetStatus_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetStatusMaxDepth">
				<wsdl:input wsaw:Action="GetStatusMaxDepth" message="tns:ManagementService_GetStatusMaxDepth_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetStatusMaxDepthResponse" message="tns:ManagementService_GetStatusMaxDepth_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetRevision">
				<wsdl:input wsaw:Action="GetRevision" message="tns:ManagementService_GetRevision_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetRevisionResponse" message="tns:ManagementService_GetRevision_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetRevisionDescriptor">
				<wsdl:input wsaw:Action="GetRevisionDescriptor" message="tns:ManagementService_GetRevisionDescriptor_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetRevisionDescriptorResponse" message="tns:ManagementService_GetRevisionDescriptor_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetRevisions">
				<wsdl:input wsaw:Action="GetRevisions" message="tns:ManagementService_GetRevisions_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetRevisionsResponse" message="tns:ManagementService_GetRevisions_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetRevisionsWithLeveledMergeRevisions">
				<wsdl:input wsaw:Action="GetRevisionsWithLeveledMergeRevisions" message="tns:ManagementService_GetRevisionsWithLeveledMergeRevisions_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetRevisionsWithLeveledMergeRevisionsResponse" message="tns:ManagementService_GetRevisionsWithLeveledMergeRevisions_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetRevisionChanges">
				<wsdl:input wsaw:Action="GetRevisionChanges" message="tns:ManagementService_GetRevisionChanges_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetRevisionChangesResponse" message="tns:ManagementService_GetRevisionChanges_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="MergeRevision">
				<wsdl:input wsaw:Action="MergeRevision" message="tns:ManagementService_MergeRevision_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/MergeRevisionResponse" message="tns:ManagementService_MergeRevision_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="MergeBranch">
				<wsdl:input wsaw:Action="MergeBranch" message="tns:ManagementService_MergeBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/MergeBranchResponse" message="tns:ManagementService_MergeBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="SetTags">
				<wsdl:input wsaw:Action="SetTags" message="tns:ManagementService_SetTags_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/SetTagsResponse" message="tns:ManagementService_SetTags_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetBranchTypes">
				<wsdl:input wsaw:Action="GetBranchTypes" message="tns:ManagementService_GetBranchTypes_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetBranchTypesResponse" message="tns:ManagementService_GetBranchTypes_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetBranchType">
				<wsdl:input wsaw:Action="GetBranchType" message="tns:ManagementService_GetBranchType_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetBranchTypeResponse" message="tns:ManagementService_GetBranchType_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="CreateBranchType">
				<wsdl:input wsaw:Action="CreateBranchType" message="tns:ManagementService_CreateBranchType_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/CreateBranchTypeResponse" message="tns:ManagementService_CreateBranchType_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="UpdateBranchType">
				<wsdl:input wsaw:Action="UpdateBranchType" message="tns:ManagementService_UpdateBranchType_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/UpdateBranchTypeResponse" message="tns:ManagementService_UpdateBranchType_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="DeleteBranchType">
				<wsdl:input wsaw:Action="DeleteBranchType" message="tns:ManagementService_DeleteBranchType_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/DeleteBranchTypeResponse" message="tns:ManagementService_DeleteBranchType_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetAllModuleElements">
				<wsdl:input wsaw:Action="GetAllModuleElements" message="tns:ManagementService_GetAllModuleElements_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetAllModuleElementsResponse" message="tns:ManagementService_GetAllModuleElements_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetModuleElements">
				<wsdl:input wsaw:Action="GetModuleElements" message="tns:ManagementService_GetModuleElements_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetModuleElementsResponse" message="tns:ManagementService_GetModuleElements_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetMostSpecificModuleElement">
				<wsdl:input wsaw:Action="GetMostSpecificModuleElement" message="tns:ManagementService_GetMostSpecificModuleElement_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetMostSpecificModuleElementResponse" message="tns:ManagementService_GetMostSpecificModuleElement_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetModuleElement">
				<wsdl:input wsaw:Action="GetModuleElement" message="tns:ManagementService_GetModuleElement_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetModuleElementResponse" message="tns:ManagementService_GetModuleElement_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetAllGlobalElements">
				<wsdl:input wsaw:Action="GetAllGlobalElements" message="tns:ManagementService_GetAllGlobalElements_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetAllGlobalElementsResponse" message="tns:ManagementService_GetAllGlobalElements_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetGlobalElements">
				<wsdl:input wsaw:Action="GetGlobalElements" message="tns:ManagementService_GetGlobalElements_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetGlobalElementsResponse" message="tns:ManagementService_GetGlobalElements_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetGlobalElement">
				<wsdl:input wsaw:Action="GetGlobalElement" message="tns:ManagementService_GetGlobalElement_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetGlobalElementResponse" message="tns:ManagementService_GetGlobalElement_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="FindGlobalElements">
				<wsdl:input wsaw:Action="FindGlobalElements" message="tns:ManagementService_FindGlobalElements_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/FindGlobalElementsResponse" message="tns:ManagementService_FindGlobalElements_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="FindGlobalElementProject">
				<wsdl:input wsaw:Action="FindGlobalElementProject" message="tns:ManagementService_FindGlobalElementProject_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/FindGlobalElementProjectResponse" message="tns:ManagementService_FindGlobalElementProject_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetProjects">
				<wsdl:input wsaw:Action="GetProjects" message="tns:ManagementService_GetProjects_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetProjectsResponse" message="tns:ManagementService_GetProjects_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetProjectsForRevision">
				<wsdl:input wsaw:Action="GetProjectsForRevision" message="tns:ManagementService_GetProjectsForRevision_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetProjectsForRevisionResponse" message="tns:ManagementService_GetProjectsForRevision_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetProject">
				<wsdl:input wsaw:Action="GetProject" message="tns:ManagementService_GetProject_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetProjectResponse" message="tns:ManagementService_GetProject_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ValidateProject">
				<wsdl:input wsaw:Action="ValidateProject" message="tns:ManagementService_ValidateProject_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ValidateProjectResponse" message="tns:ManagementService_ValidateProject_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetPackages">
				<wsdl:input wsaw:Action="GetPackages" message="tns:ManagementService_GetPackages_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetPackagesResponse" message="tns:ManagementService_GetPackages_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetPackage">
				<wsdl:input wsaw:Action="GetPackage" message="tns:ManagementService_GetPackage_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetPackageResponse" message="tns:ManagementService_GetPackage_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetModules">
				<wsdl:input wsaw:Action="GetModules" message="tns:ManagementService_GetModules_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetModulesResponse" message="tns:ManagementService_GetModules_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetModule">
				<wsdl:input wsaw:Action="GetModule" message="tns:ManagementService_GetModule_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetModuleResponse" message="tns:ManagementService_GetModule_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="FindModuleProject">
				<wsdl:input wsaw:Action="FindModuleProject" message="tns:ManagementService_FindModuleProject_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/FindModuleProjectResponse" message="tns:ManagementService_FindModuleProject_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ApplyOperations">
				<wsdl:input wsaw:Action="ApplyOperations" message="tns:ManagementService_ApplyOperations_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ApplyOperationsResponse" message="tns:ManagementService_ApplyOperations_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="EvaluateExpression">
				<wsdl:input wsaw:Action="EvaluateExpression" message="tns:ManagementService_EvaluateExpression_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/EvaluateExpressionResponse" message="tns:ManagementService_EvaluateExpression_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetUsedByElementsForModuleElement">
				<wsdl:input wsaw:Action="GetUsedByElementsForModuleElement" message="tns:ManagementService_GetUsedByElementsForModuleElement_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetUsedByElementsForModuleElementResponse" message="tns:ManagementService_GetUsedByElementsForModuleElement_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetUsedByElementsForGlobalElement">
				<wsdl:input wsaw:Action="GetUsedByElementsForGlobalElement" message="tns:ManagementService_GetUsedByElementsForGlobalElement_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetUsedByElementsForGlobalElementResponse" message="tns:ManagementService_GetUsedByElementsForGlobalElement_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetUseElementsForModuleElement">
				<wsdl:input wsaw:Action="GetUseElementsForModuleElement" message="tns:ManagementService_GetUseElementsForModuleElement_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetUseElementsForModuleElementResponse" message="tns:ManagementService_GetUseElementsForModuleElement_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetUseElementsForGlobalElement">
				<wsdl:input wsaw:Action="GetUseElementsForGlobalElement" message="tns:ManagementService_GetUseElementsForGlobalElement_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetUseElementsForGlobalElementResponse" message="tns:ManagementService_GetUseElementsForGlobalElement_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="Search">
				<wsdl:input wsaw:Action="Search" message="tns:ManagementService_Search_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/SearchResponse" message="tns:ManagementService_Search_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="StartAdvancedSearch">
				<wsdl:input wsaw:Action="StartAdvancedSearch" message="tns:ManagementService_StartAdvancedSearch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/StartAdvancedSearchResponse" message="tns:ManagementService_StartAdvancedSearch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="StopAdvancedSearch">
				<wsdl:input wsaw:Action="StopAdvancedSearch" message="tns:ManagementService_StopAdvancedSearch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/StopAdvancedSearchResponse" message="tns:ManagementService_StopAdvancedSearch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetAdvancedSearchResults">
				<wsdl:input wsaw:Action="GetAdvancedSearchResults" message="tns:ManagementService_GetAdvancedSearchResults_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetAdvancedSearchResultsResponse" message="tns:ManagementService_GetAdvancedSearchResults_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetLibraries">
				<wsdl:input wsaw:Action="GetLibraries" message="tns:ManagementService_GetLibraries_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetLibrariesResponse" message="tns:ManagementService_GetLibraries_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportProject">
				<wsdl:input wsaw:Action="ExportProject" message="tns:ManagementService_ExportProject_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportProjectResponse" message="tns:ManagementService_ExportProject_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportProjectRevision">
				<wsdl:input wsaw:Action="ExportProjectRevision" message="tns:ManagementService_ExportProjectRevision_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportProjectRevisionResponse" message="tns:ManagementService_ExportProjectRevision_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportProjectWithMetadata">
				<wsdl:input wsaw:Action="ExportProjectWithMetadata" message="tns:ManagementService_ExportProjectWithMetadata_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportProjectWithMetadataResponse" message="tns:ManagementService_ExportProjectWithMetadata_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportProjectRevisionWithMetadata">
				<wsdl:input wsaw:Action="ExportProjectRevisionWithMetadata" message="tns:ManagementService_ExportProjectRevisionWithMetadata_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportProjectRevisionWithMetadataResponse" message="tns:ManagementService_ExportProjectRevisionWithMetadata_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportBranch">
				<wsdl:input wsaw:Action="ExportBranch" message="tns:ManagementService_ExportBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportBranchResponse" message="tns:ManagementService_ExportBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportLibrary">
				<wsdl:input wsaw:Action="ExportLibrary" message="tns:ManagementService_ExportLibrary_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportLibraryResponse" message="tns:ManagementService_ExportLibrary_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ExportPackage">
				<wsdl:input wsaw:Action="ExportPackage" message="tns:ManagementService_ExportPackage_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ExportPackageResponse" message="tns:ManagementService_ExportPackage_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ImportBranch">
				<wsdl:input wsaw:Action="ImportBranch" message="tns:ManagementService_ImportBranch_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ImportBranchResponse" message="tns:ManagementService_ImportBranch_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ImportLibrary">
				<wsdl:input wsaw:Action="ImportLibrary" message="tns:ManagementService_ImportLibrary_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ImportLibraryResponse" message="tns:ManagementService_ImportLibrary_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="ReadLibraryMetadata">
				<wsdl:input wsaw:Action="ReadLibraryMetadata" message="tns:ManagementService_ReadLibraryMetadata_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/ReadLibraryMetadataResponse" message="tns:ManagementService_ReadLibraryMetadata_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetRepositories">
				<wsdl:input wsaw:Action="GetRepositories" message="tns:ManagementService_GetRepositories_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetRepositoriesResponse" message="tns:ManagementService_GetRepositories_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="GetRepository">
				<wsdl:input wsaw:Action="GetRepository" message="tns:ManagementService_GetRepository_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/GetRepositoryResponse" message="tns:ManagementService_GetRepository_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="CreateRepository">
				<wsdl:input wsaw:Action="CreateRepository" message="tns:ManagementService_CreateRepository_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/CreateRepositoryResponse" message="tns:ManagementService_CreateRepository_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="UpdateRepository">
				<wsdl:input wsaw:Action="UpdateRepository" message="tns:ManagementService_UpdateRepository_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/UpdateRepositoryResponse" message="tns:ManagementService_UpdateRepository_OutputMessage"/>
			</wsdl:operation>
			<wsdl:operation name="DeleteRepository">
				<wsdl:input wsaw:Action="DeleteRepository" message="tns:ManagementService_DeleteRepository_InputMessage"/>
				<wsdl:output wsaw:Action="http://www.everest.nl/aquima/studio/ManagementService/1.0/ManagementService/DeleteRepositoryResponse" message="tns:ManagementService_DeleteRepository_OutputMessage"/>
			</wsdl:operation>
		</wsdl:portType>
		<wsdl:binding name="BasicHttpBinding_ManagementService" type="tns:ManagementService">
			<wsp:PolicyReference URI="#BasicHttpBinding_ManagementService_policy"/>
			<soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
			<wsdl:operation name="ImportSpecification">
				<soap:operation soapAction="ImportSpecification" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExecuteUnitTests">
				<soap:operation soapAction="ExecuteUnitTest" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExecuteUnitTestsForRevision">
				<soap:operation soapAction="ExecuteUnitTestForRevision" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExecuteAllUnitTests">
				<soap:operation soapAction="ExecuteAllUnitTests" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExecuteAllUnitTestsForRevision">
				<soap:operation soapAction="ExecuteAllUnitTestsForRevision" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportAllUnitTestCoverage">
				<soap:operation soapAction="ExportAllUnitTestCoverage" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="RetrieveSubscriptionStatus">
				<soap:operation soapAction="RetrieveSubscriptionInformation" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetDataSource">
				<soap:operation soapAction="GetDataSource" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="SetDataSource">
				<soap:operation soapAction="SetDataSource" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="RetrieveLog">
				<soap:operation soapAction="RetrieveLog" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="SendMessage">
				<soap:operation soapAction="SendMessage" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="Logout">
				<soap:operation soapAction="Logout" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="RetrieveServerInformation">
				<soap:operation soapAction="RetrieveServerStatus" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetCurrentIdentity">
				<soap:operation soapAction="GetCurrentIdentity" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="IsInRole">
				<soap:operation soapAction="IsInRole" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="HasModuleWriteAccess">
				<soap:operation soapAction="HasModuleWriteAccess" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetLicenseData">
				<soap:operation soapAction="GetLicenseData" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetBranches">
				<soap:operation soapAction="GetBranches" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetBranch">
				<soap:operation soapAction="GetBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="CreateBranch">
				<soap:operation soapAction="CreateBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="CreateFeatureBranch">
				<soap:operation soapAction="CreateFeatureBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="CreateFeatureBranchOnRevision">
				<soap:operation soapAction="CreateFeatureBranchOnRevision" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="UpdateBranch">
				<soap:operation soapAction="UpdateBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="DeleteBranch">
				<soap:operation soapAction="DeleteBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="Commit">
				<soap:operation soapAction="Commit" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetStatus">
				<soap:operation soapAction="GetStatus" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetStatusMaxDepth">
				<soap:operation soapAction="GetStatusMaxDepth" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetRevision">
				<soap:operation soapAction="GetRevision" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetRevisionDescriptor">
				<soap:operation soapAction="GetRevisionDescriptor" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetRevisions">
				<soap:operation soapAction="GetRevisions" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetRevisionsWithLeveledMergeRevisions">
				<soap:operation soapAction="GetRevisionsWithLeveledMergeRevisions" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetRevisionChanges">
				<soap:operation soapAction="GetRevisionChanges" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="MergeRevision">
				<soap:operation soapAction="MergeRevision" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="MergeBranch">
				<soap:operation soapAction="MergeBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="SetTags">
				<soap:operation soapAction="SetTags" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetBranchTypes">
				<soap:operation soapAction="GetBranchTypes" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetBranchType">
				<soap:operation soapAction="GetBranchType" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="CreateBranchType">
				<soap:operation soapAction="CreateBranchType" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="UpdateBranchType">
				<soap:operation soapAction="UpdateBranchType" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="DeleteBranchType">
				<soap:operation soapAction="DeleteBranchType" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetAllModuleElements">
				<soap:operation soapAction="GetAllModuleElements" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetModuleElements">
				<soap:operation soapAction="GetModuleElements" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetMostSpecificModuleElement">
				<soap:operation soapAction="GetMostSpecificModuleElement" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetModuleElement">
				<soap:operation soapAction="GetModuleElement" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetAllGlobalElements">
				<soap:operation soapAction="GetAllGlobalElements" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetGlobalElements">
				<soap:operation soapAction="GetGlobalElements" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetGlobalElement">
				<soap:operation soapAction="GetGlobalElement" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="FindGlobalElements">
				<soap:operation soapAction="FindGlobalElements" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="FindGlobalElementProject">
				<soap:operation soapAction="FindGlobalElementProject" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetProjects">
				<soap:operation soapAction="GetProjects" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetProjectsForRevision">
				<soap:operation soapAction="GetProjectsForRevision" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetProject">
				<soap:operation soapAction="GetProject" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ValidateProject">
				<soap:operation soapAction="ValidateProject" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetPackages">
				<soap:operation soapAction="GetPackages" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetPackage">
				<soap:operation soapAction="GetPackage" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetModules">
				<soap:operation soapAction="GetModules" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetModule">
				<soap:operation soapAction="GetModule" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="FindModuleProject">
				<soap:operation soapAction="FindModuleProject" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ApplyOperations">
				<soap:operation soapAction="ApplyOperations" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="EvaluateExpression">
				<soap:operation soapAction="EvaluateExpression" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetUsedByElementsForModuleElement">
				<soap:operation soapAction="GetUsedByElementsForModuleElement" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetUsedByElementsForGlobalElement">
				<soap:operation soapAction="GetUsedByElementsForGlobalElement" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetUseElementsForModuleElement">
				<soap:operation soapAction="GetUseElementsForModuleElement" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetUseElementsForGlobalElement">
				<soap:operation soapAction="GetUseElementsForGlobalElement" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="Search">
				<soap:operation soapAction="Search" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="StartAdvancedSearch">
				<soap:operation soapAction="StartAdvancedSearch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="StopAdvancedSearch">
				<soap:operation soapAction="StopAdvancedSearch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetAdvancedSearchResults">
				<soap:operation soapAction="GetAdvancedSearchResults" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetLibraries">
				<soap:operation soapAction="GetLibraries" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportProject">
				<soap:operation soapAction="ExportProject" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportProjectRevision">
				<soap:operation soapAction="ExportProjectRevision" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportProjectWithMetadata">
				<soap:operation soapAction="ExportProjectWithMetadata" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportProjectRevisionWithMetadata">
				<soap:operation soapAction="ExportProjectRevisionWithMetadata" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportBranch">
				<soap:operation soapAction="ExportBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportLibrary">
				<soap:operation soapAction="ExportLibrary" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ExportPackage">
				<soap:operation soapAction="ExportPackage" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ImportBranch">
				<soap:operation soapAction="ImportBranch" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ImportLibrary">
				<soap:operation soapAction="ImportLibrary" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="ReadLibraryMetadata">
				<soap:operation soapAction="ReadLibraryMetadata" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetRepositories">
				<soap:operation soapAction="GetRepositories" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="GetRepository">
				<soap:operation soapAction="GetRepository" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="CreateRepository">
				<soap:operation soapAction="CreateRepository" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="UpdateRepository">
				<soap:operation soapAction="UpdateRepository" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
			<wsdl:operation name="DeleteRepository">
				<soap:operation soapAction="DeleteRepository" style="document"/>
				<wsdl:input>
					<soap:body use="literal"/>
				</wsdl:input>
				<wsdl:output>
					<soap:body use="literal"/>
				</wsdl:output>
			</wsdl:operation>
		</wsdl:binding>
		<wsdl:service name="ManagementService">
			<wsdl:port name="BasicHttpBinding_ManagementService" binding="tns:BasicHttpBinding_ManagementService">
				<soap:address location="http://localhost:16093/Services/ManagementService"/>
			</wsdl:port>
		</wsdl:service>
	</wsdl:definitions>
