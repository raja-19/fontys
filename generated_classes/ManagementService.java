
package com.cet.managementservice;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ManagementService", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ManagementService {


    /**
     * 
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @param base64SpecificationString
     */
    @WebMethod(operationName = "ImportSpecification", action = "ImportSpecification")
    @RequestWrapper(localName = "ImportSpecification", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ImportSpecification")
    @ResponseWrapper(localName = "ImportSpecificationResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ImportSpecificationResponse")
    public void importSpecification(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String module,
        @WebParam(name = "base64SpecificationString", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String base64SpecificationString);

    /**
     * 
     * @param module
     * @param unittests
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.UnitTestExecutionResponse
     */
    @WebMethod(operationName = "ExecuteUnitTests", action = "ExecuteUnitTest")
    @WebResult(name = "ExecuteUnitTestsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExecuteUnitTests", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteUnitTests")
    @ResponseWrapper(localName = "ExecuteUnitTestsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteUnitTestsResponse")
    public UnitTestExecutionResponse executeUnitTests(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "unittests", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ArrayOfString unittests);

    /**
     * 
     * @param revisionId
     * @param module
     * @param unittests
     * @param project
     * @param repository
     * @return
     *     returns com.cet.managementservice.UnitTestExecutionResponse
     */
    @WebMethod(operationName = "ExecuteUnitTestsForRevision", action = "ExecuteUnitTestForRevision")
    @WebResult(name = "ExecuteUnitTestsForRevisionResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExecuteUnitTestsForRevision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteUnitTestsForRevision")
    @ResponseWrapper(localName = "ExecuteUnitTestsForRevisionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteUnitTestsForRevisionResponse")
    public UnitTestExecutionResponse executeUnitTestsForRevision(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "unittests", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ArrayOfString unittests);

    /**
     * 
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.UnitTestExecutionResponse
     */
    @WebMethod(operationName = "ExecuteAllUnitTests", action = "ExecuteAllUnitTests")
    @WebResult(name = "ExecuteAllUnitTestsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExecuteAllUnitTests", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteAllUnitTests")
    @ResponseWrapper(localName = "ExecuteAllUnitTestsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteAllUnitTestsResponse")
    public UnitTestExecutionResponse executeAllUnitTests(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module);

    /**
     * 
     * @param revisionId
     * @param module
     * @param project
     * @param repository
     * @return
     *     returns com.cet.managementservice.UnitTestExecutionResponse
     */
    @WebMethod(operationName = "ExecuteAllUnitTestsForRevision", action = "ExecuteAllUnitTestsForRevision")
    @WebResult(name = "ExecuteAllUnitTestsForRevisionResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExecuteAllUnitTestsForRevision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteAllUnitTestsForRevision")
    @ResponseWrapper(localName = "ExecuteAllUnitTestsForRevisionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExecuteAllUnitTestsForRevisionResponse")
    public UnitTestExecutionResponse executeAllUnitTestsForRevision(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module);

    /**
     * 
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.UnitTestCoverageResponse
     */
    @WebMethod(operationName = "ExportAllUnitTestCoverage", action = "ExportAllUnitTestCoverage")
    @WebResult(name = "ExportAllUnitTestCoverageResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportAllUnitTestCoverage", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportAllUnitTestCoverage")
    @ResponseWrapper(localName = "ExportAllUnitTestCoverageResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportAllUnitTestCoverageResponse")
    public UnitTestCoverageResponse exportAllUnitTestCoverage(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch);

    /**
     * 
     * @return
     *     returns com.cet.managementservice.SubscriptionStatus
     */
    @WebMethod(operationName = "RetrieveSubscriptionStatus", action = "RetrieveSubscriptionInformation")
    @WebResult(name = "RetrieveSubscriptionStatusResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "RetrieveSubscriptionStatus", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.RetrieveSubscriptionStatus")
    @ResponseWrapper(localName = "RetrieveSubscriptionStatusResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.RetrieveSubscriptionStatusResponse")
    public SubscriptionStatus retrieveSubscriptionStatus();

    /**
     * 
     * @param path
     * @return
     *     returns com.cet.managementservice.DataSourceInformation
     */
    @WebMethod(operationName = "GetDataSource", action = "GetDataSource")
    @WebResult(name = "GetDataSourceResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetDataSource", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetDataSource")
    @ResponseWrapper(localName = "GetDataSourceResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetDataSourceResponse")
    public DataSourceInformation getDataSource(
        @WebParam(name = "path", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String path);

    /**
     * 
     * @param path
     * @return
     *     returns com.cet.managementservice.DataSourceInformation
     */
    @WebMethod(operationName = "SetDataSource", action = "SetDataSource")
    @WebResult(name = "SetDataSourceResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "SetDataSource", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.SetDataSource")
    @ResponseWrapper(localName = "SetDataSourceResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.SetDataSourceResponse")
    public DataSourceInformation setDataSource(
        @WebParam(name = "path", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String path);

    /**
     * 
     * @param length
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RetrieveLog", action = "RetrieveLog")
    @WebResult(name = "RetrieveLogResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "RetrieveLog", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.RetrieveLog")
    @ResponseWrapper(localName = "RetrieveLogResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.RetrieveLogResponse")
    public String retrieveLog(
        @WebParam(name = "length", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        int length);

    /**
     * 
     * @param textMessage
     */
    @WebMethod(operationName = "SendMessage", action = "SendMessage")
    @RequestWrapper(localName = "SendMessage", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.SendMessage")
    @ResponseWrapper(localName = "SendMessageResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.SendMessageResponse")
    public void sendMessage(
        @WebParam(name = "textMessage", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        TextMessage textMessage);

    /**
     * 
     * @param sessionId
     */
    @WebMethod(operationName = "Logout", action = "Logout")
    @RequestWrapper(localName = "Logout", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.Logout")
    @ResponseWrapper(localName = "LogoutResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.LogoutResponse")
    public void logout(
        @WebParam(name = "sessionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String sessionId);

    /**
     * 
     * @return
     *     returns com.cet.managementservice.ServerInformation
     */
    @WebMethod(operationName = "RetrieveServerInformation", action = "RetrieveServerStatus")
    @WebResult(name = "RetrieveServerInformationResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "RetrieveServerInformation", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.RetrieveServerInformation")
    @ResponseWrapper(localName = "RetrieveServerInformationResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.RetrieveServerInformationResponse")
    public ServerInformation retrieveServerInformation();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetCurrentIdentity", action = "GetCurrentIdentity")
    @WebResult(name = "GetCurrentIdentityResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetCurrentIdentity", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetCurrentIdentity")
    @ResponseWrapper(localName = "GetCurrentIdentityResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetCurrentIdentityResponse")
    public String getCurrentIdentity();

    /**
     * 
     * @param userRole
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsInRole", action = "IsInRole")
    @WebResult(name = "IsInRoleResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "IsInRole", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.IsInRole")
    @ResponseWrapper(localName = "IsInRoleResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.IsInRoleResponse")
    public boolean isInRole(
        @WebParam(name = "userRole", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String userRole);

    /**
     * 
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "HasModuleWriteAccess", action = "HasModuleWriteAccess")
    @WebResult(name = "HasModuleWriteAccessResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "HasModuleWriteAccess", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.HasModuleWriteAccess")
    @ResponseWrapper(localName = "HasModuleWriteAccessResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.HasModuleWriteAccessResponse")
    public boolean hasModuleWriteAccess(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetLicenseData", action = "GetLicenseData")
    @WebResult(name = "GetLicenseDataResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetLicenseData", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetLicenseData")
    @ResponseWrapper(localName = "GetLicenseDataResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetLicenseDataResponse")
    public String getLicenseData();

    /**
     * 
     * @param repository
     * @return
     *     returns com.cet.managementservice.ArrayOfString
     */
    @WebMethod(operationName = "GetBranches", action = "GetBranches")
    @WebResult(name = "GetBranchesResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetBranches", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranches")
    @ResponseWrapper(localName = "GetBranchesResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranchesResponse")
    public ArrayOfString getBranches(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository);

    /**
     * 
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.Branch
     */
    @WebMethod(operationName = "GetBranch", action = "GetBranch")
    @WebResult(name = "GetBranchResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranch")
    @ResponseWrapper(localName = "GetBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranchResponse")
    public Branch getBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch);

    /**
     * 
     * @param repository
     * @param message
     * @param branch
     */
    @WebMethod(operationName = "CreateBranch", action = "CreateBranch")
    @RequestWrapper(localName = "CreateBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateBranch")
    @ResponseWrapper(localName = "CreateBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateBranchResponse")
    public void createBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        Branch branch,
        @WebParam(name = "message", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String message);

    /**
     * 
     * @param basedOnBranch
     * @param repository
     * @param branch
     */
    @WebMethod(operationName = "CreateFeatureBranch", action = "CreateFeatureBranch")
    @RequestWrapper(localName = "CreateFeatureBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateFeatureBranch")
    @ResponseWrapper(localName = "CreateFeatureBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateFeatureBranchResponse")
    public void createFeatureBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "basedOnBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String basedOnBranch,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        Branch branch);

    /**
     * 
     * @param repository
     * @param branch
     * @param revision
     */
    @WebMethod(operationName = "CreateFeatureBranchOnRevision", action = "CreateFeatureBranchOnRevision")
    @RequestWrapper(localName = "CreateFeatureBranchOnRevision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateFeatureBranchOnRevision")
    @ResponseWrapper(localName = "CreateFeatureBranchOnRevisionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateFeatureBranchOnRevisionResponse")
    public void createFeatureBranchOnRevision(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "revision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revision,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        Branch branch);

    /**
     * 
     * @param originalName
     * @param repository
     * @param branch
     */
    @WebMethod(operationName = "UpdateBranch", action = "UpdateBranch")
    @RequestWrapper(localName = "UpdateBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.UpdateBranch")
    @ResponseWrapper(localName = "UpdateBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.UpdateBranchResponse")
    public void updateBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "originalName", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String originalName,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        Branch branch);

    /**
     * 
     * @param repository
     * @param branch
     */
    @WebMethod(operationName = "DeleteBranch", action = "DeleteBranch")
    @RequestWrapper(localName = "DeleteBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.DeleteBranch")
    @ResponseWrapper(localName = "DeleteBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.DeleteBranchResponse")
    public void deleteBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch);

    /**
     * 
     * @param commitMessage
     * @param repository
     * @param branch
     */
    @WebMethod(operationName = "Commit", action = "Commit")
    @RequestWrapper(localName = "Commit", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.Commit")
    @ResponseWrapper(localName = "CommitResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CommitResponse")
    public void commit(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "commitMessage", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String commitMessage);

    /**
     * 
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.BranchStatus
     */
    @WebMethod(operationName = "GetStatus", action = "GetStatus")
    @WebResult(name = "GetStatusResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetStatus", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetStatus")
    @ResponseWrapper(localName = "GetStatusResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetStatusResponse")
    public BranchStatus getStatus(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch);

    /**
     * 
     * @param maxMergedRevisionsDepth
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.BranchStatus
     */
    @WebMethod(operationName = "GetStatusMaxDepth", action = "GetStatusMaxDepth")
    @WebResult(name = "GetStatusMaxDepthResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetStatusMaxDepth", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetStatusMaxDepth")
    @ResponseWrapper(localName = "GetStatusMaxDepthResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetStatusMaxDepthResponse")
    public BranchStatus getStatusMaxDepth(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "maxMergedRevisionsDepth", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        int maxMergedRevisionsDepth);

    /**
     * 
     * @param revisionId
     * @param repository
     * @return
     *     returns com.cet.managementservice.Revision
     */
    @WebMethod(operationName = "GetRevision", action = "GetRevision")
    @WebResult(name = "GetRevisionResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetRevision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevision")
    @ResponseWrapper(localName = "GetRevisionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionResponse")
    public Revision getRevision(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId);

    /**
     * 
     * @param revisionId
     * @param repository
     * @return
     *     returns com.cet.managementservice.Revision
     */
    @WebMethod(operationName = "GetRevisionDescriptor", action = "GetRevisionDescriptor")
    @WebResult(name = "GetRevisionDescriptorResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetRevisionDescriptor", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionDescriptor")
    @ResponseWrapper(localName = "GetRevisionDescriptorResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionDescriptorResponse")
    public Revision getRevisionDescriptor(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId);

    /**
     * 
     * @param includeMergeRevisions
     * @param startIndex
     * @param amount
     * @param taggedOnly
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfRevision
     */
    @WebMethod(operationName = "GetRevisions", action = "GetRevisions")
    @WebResult(name = "GetRevisionsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetRevisions", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisions")
    @ResponseWrapper(localName = "GetRevisionsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionsResponse")
    public ArrayOfRevision getRevisions(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "startIndex", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        int startIndex,
        @WebParam(name = "amount", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        int amount,
        @WebParam(name = "taggedOnly", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean taggedOnly,
        @WebParam(name = "includeMergeRevisions", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean includeMergeRevisions);

    /**
     * 
     * @param startIndex
     * @param amount
     * @param level
     * @param taggedOnly
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfRevision
     */
    @WebMethod(operationName = "GetRevisionsWithLeveledMergeRevisions", action = "GetRevisionsWithLeveledMergeRevisions")
    @WebResult(name = "GetRevisionsWithLeveledMergeRevisionsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetRevisionsWithLeveledMergeRevisions", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionsWithLeveledMergeRevisions")
    @ResponseWrapper(localName = "GetRevisionsWithLeveledMergeRevisionsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionsWithLeveledMergeRevisionsResponse")
    public ArrayOfRevision getRevisionsWithLeveledMergeRevisions(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "startIndex", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        int startIndex,
        @WebParam(name = "amount", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        int amount,
        @WebParam(name = "taggedOnly", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean taggedOnly,
        @WebParam(name = "level", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        int level);

    /**
     * 
     * @param repository
     * @param branch
     * @param revision
     * @return
     *     returns com.cet.managementservice.ArrayOfElementChange
     */
    @WebMethod(operationName = "GetRevisionChanges", action = "GetRevisionChanges")
    @WebResult(name = "GetRevisionChangesResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetRevisionChanges", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionChanges")
    @ResponseWrapper(localName = "GetRevisionChangesResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRevisionChangesResponse")
    public ArrayOfElementChange getRevisionChanges(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "revision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revision);

    /**
     * 
     * @param revisionId
     * @param preview
     * @param discard
     * @param targetBranch
     * @param sourceBranch
     * @param repository
     * @return
     *     returns com.cet.managementservice.MergeResult
     */
    @WebMethod(operationName = "MergeRevision", action = "MergeRevision")
    @WebResult(name = "MergeRevisionResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "MergeRevision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.MergeRevision")
    @ResponseWrapper(localName = "MergeRevisionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.MergeRevisionResponse")
    public MergeResult mergeRevision(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "targetBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String targetBranch,
        @WebParam(name = "sourceBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String sourceBranch,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId,
        @WebParam(name = "discard", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean discard,
        @WebParam(name = "preview", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean preview);

    /**
     * 
     * @param preview
     * @param discard
     * @param targetBranch
     * @param sourceBranch
     * @param repository
     * @return
     *     returns com.cet.managementservice.MergeResult
     */
    @WebMethod(operationName = "MergeBranch", action = "MergeBranch")
    @WebResult(name = "MergeBranchResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "MergeBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.MergeBranch")
    @ResponseWrapper(localName = "MergeBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.MergeBranchResponse")
    public MergeResult mergeBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "targetBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String targetBranch,
        @WebParam(name = "sourceBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String sourceBranch,
        @WebParam(name = "discard", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean discard,
        @WebParam(name = "preview", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean preview);

    /**
     * 
     * @param revisionId
     * @param repository
     * @param tags
     */
    @WebMethod(operationName = "SetTags", action = "SetTags")
    @RequestWrapper(localName = "SetTags", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.SetTags")
    @ResponseWrapper(localName = "SetTagsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.SetTagsResponse")
    public void setTags(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId,
        @WebParam(name = "tags", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ArrayOfString tags);

    /**
     * 
     * @param repository
     * @return
     *     returns com.cet.managementservice.ArrayOfString
     */
    @WebMethod(operationName = "GetBranchTypes", action = "GetBranchTypes")
    @WebResult(name = "GetBranchTypesResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetBranchTypes", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranchTypes")
    @ResponseWrapper(localName = "GetBranchTypesResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranchTypesResponse")
    public ArrayOfString getBranchTypes(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository);

    /**
     * 
     * @param branchType
     * @param repository
     * @return
     *     returns com.cet.managementservice.BranchType
     */
    @WebMethod(operationName = "GetBranchType", action = "GetBranchType")
    @WebResult(name = "GetBranchTypeResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetBranchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranchType")
    @ResponseWrapper(localName = "GetBranchTypeResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetBranchTypeResponse")
    public BranchType getBranchType(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branchType);

    /**
     * 
     * @param branchType
     * @param repository
     */
    @WebMethod(operationName = "CreateBranchType", action = "CreateBranchType")
    @RequestWrapper(localName = "CreateBranchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateBranchType")
    @ResponseWrapper(localName = "CreateBranchTypeResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateBranchTypeResponse")
    public void createBranchType(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        BranchType branchType);

    /**
     * 
     * @param originalName
     * @param branchType
     * @param repository
     */
    @WebMethod(operationName = "UpdateBranchType", action = "UpdateBranchType")
    @RequestWrapper(localName = "UpdateBranchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.UpdateBranchType")
    @ResponseWrapper(localName = "UpdateBranchTypeResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.UpdateBranchTypeResponse")
    public void updateBranchType(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "originalName", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String originalName,
        @WebParam(name = "branchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        BranchType branchType);

    /**
     * 
     * @param branchType
     * @param repository
     */
    @WebMethod(operationName = "DeleteBranchType", action = "DeleteBranchType")
    @RequestWrapper(localName = "DeleteBranchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.DeleteBranchType")
    @ResponseWrapper(localName = "DeleteBranchTypeResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.DeleteBranchTypeResponse")
    public void deleteBranchType(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branchType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branchType);

    /**
     * 
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfModuleElementKey
     */
    @WebMethod(operationName = "GetAllModuleElements", action = "GetAllModuleElements")
    @WebResult(name = "GetAllModuleElementsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetAllModuleElements", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetAllModuleElements")
    @ResponseWrapper(localName = "GetAllModuleElementsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetAllModuleElementsResponse")
    public ArrayOfModuleElementKey getAllModuleElements(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module);

    /**
     * 
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @param elementType
     * @return
     *     returns com.cet.managementservice.ArrayOfModuleElementKey
     */
    @WebMethod(operationName = "GetModuleElements", action = "GetModuleElements")
    @WebResult(name = "GetModuleElementsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetModuleElements", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModuleElements")
    @ResponseWrapper(localName = "GetModuleElementsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModuleElementsResponse")
    public ArrayOfModuleElementKey getModuleElements(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "elementType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleElementType elementType);

    /**
     * 
     * @param module
     * @param moduleElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ModuleElementImplementation
     */
    @WebMethod(operationName = "GetMostSpecificModuleElement", action = "GetMostSpecificModuleElement")
    @WebResult(name = "GetMostSpecificModuleElementResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetMostSpecificModuleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetMostSpecificModuleElement")
    @ResponseWrapper(localName = "GetMostSpecificModuleElementResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetMostSpecificModuleElementResponse")
    public ModuleElementImplementation getMostSpecificModuleElement(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "moduleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleElementKey moduleElement);

    /**
     * 
     * @param module
     * @param moduleElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ModuleElement
     */
    @WebMethod(operationName = "GetModuleElement", action = "GetModuleElement")
    @WebResult(name = "GetModuleElementResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetModuleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModuleElement")
    @ResponseWrapper(localName = "GetModuleElementResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModuleElementResponse")
    public ModuleElement getModuleElement(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "moduleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleElementKey moduleElement);

    /**
     * 
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfGlobalElementKey
     */
    @WebMethod(operationName = "GetAllGlobalElements", action = "GetAllGlobalElements")
    @WebResult(name = "GetAllGlobalElementsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetAllGlobalElements", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetAllGlobalElements")
    @ResponseWrapper(localName = "GetAllGlobalElementsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetAllGlobalElementsResponse")
    public ArrayOfGlobalElementKey getAllGlobalElements(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project);

    /**
     * 
     * @param project
     * @param repository
     * @param branch
     * @param elementType
     * @return
     *     returns com.cet.managementservice.ArrayOfGlobalElementKey
     */
    @WebMethod(operationName = "GetGlobalElements", action = "GetGlobalElements")
    @WebResult(name = "GetGlobalElementsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetGlobalElements", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetGlobalElements")
    @ResponseWrapper(localName = "GetGlobalElementsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetGlobalElementsResponse")
    public ArrayOfGlobalElementKey getGlobalElements(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "elementType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        GlobalElementType elementType);

    /**
     * 
     * @param globalElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.GlobalElement
     */
    @WebMethod(operationName = "GetGlobalElement", action = "GetGlobalElement")
    @WebResult(name = "GetGlobalElementResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetGlobalElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetGlobalElement")
    @ResponseWrapper(localName = "GetGlobalElementResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetGlobalElementResponse")
    public GlobalElement getGlobalElement(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "globalElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        GlobalElementKey globalElement);

    /**
     * 
     * @param project
     * @param repository
     * @param branch
     * @param elementType
     * @return
     *     returns com.cet.managementservice.ArrayOfGlobalElementKey
     */
    @WebMethod(operationName = "FindGlobalElements", action = "FindGlobalElements")
    @WebResult(name = "FindGlobalElementsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "FindGlobalElements", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.FindGlobalElements")
    @ResponseWrapper(localName = "FindGlobalElementsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.FindGlobalElementsResponse")
    public ArrayOfGlobalElementKey findGlobalElements(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "elementType", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        GlobalElementType elementType);

    /**
     * 
     * @param globalElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "FindGlobalElementProject", action = "FindGlobalElementProject")
    @WebResult(name = "FindGlobalElementProjectResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "FindGlobalElementProject", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.FindGlobalElementProject")
    @ResponseWrapper(localName = "FindGlobalElementProjectResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.FindGlobalElementProjectResponse")
    public String findGlobalElementProject(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "globalElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        GlobalElementKey globalElement);

    /**
     * 
     * @param includeLibraries
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfString
     */
    @WebMethod(operationName = "GetProjects", action = "GetProjects")
    @WebResult(name = "GetProjectsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetProjects", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetProjects")
    @ResponseWrapper(localName = "GetProjectsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetProjectsResponse")
    public ArrayOfString getProjects(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "includeLibraries", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean includeLibraries);

    /**
     * 
     * @param revisionId
     * @param includeLibraries
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfString
     */
    @WebMethod(operationName = "GetProjectsForRevision", action = "GetProjectsForRevision")
    @WebResult(name = "GetProjectsForRevisionResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetProjectsForRevision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetProjectsForRevision")
    @ResponseWrapper(localName = "GetProjectsForRevisionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetProjectsForRevisionResponse")
    public ArrayOfString getProjectsForRevision(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId,
        @WebParam(name = "includeLibraries", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean includeLibraries);

    /**
     * 
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.Project
     */
    @WebMethod(operationName = "GetProject", action = "GetProject")
    @WebResult(name = "GetProjectResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetProject", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetProject")
    @ResponseWrapper(localName = "GetProjectResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetProjectResponse")
    public Project getProject(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project);

    /**
     * 
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ProjectValidationResult
     */
    @WebMethod(operationName = "ValidateProject", action = "ValidateProject")
    @WebResult(name = "ValidateProjectResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ValidateProject", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ValidateProject")
    @ResponseWrapper(localName = "ValidateProjectResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ValidateProjectResponse")
    public ProjectValidationResult validateProject(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project);

    /**
     * 
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfString
     */
    @WebMethod(operationName = "GetPackages", action = "GetPackages")
    @WebResult(name = "GetPackagesResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetPackages", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetPackages")
    @ResponseWrapper(localName = "GetPackagesResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetPackagesResponse")
    public ArrayOfString getPackages(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch);

    /**
     * 
     * @param packageName
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.LibraryPackage
     */
    @WebMethod(operationName = "GetPackage", action = "GetPackage")
    @WebResult(name = "GetPackageResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetPackage", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetPackage")
    @ResponseWrapper(localName = "GetPackageResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetPackageResponse")
    public LibraryPackage getPackage(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "packageName", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String packageName);

    /**
     * 
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfModuleKey
     */
    @WebMethod(operationName = "GetModules", action = "GetModules")
    @WebResult(name = "GetModulesResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetModules", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModules")
    @ResponseWrapper(localName = "GetModulesResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModulesResponse")
    public ArrayOfModuleKey getModules(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project);

    /**
     * 
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.Module
     */
    @WebMethod(operationName = "GetModule", action = "GetModule")
    @WebResult(name = "GetModuleResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetModule", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModule")
    @ResponseWrapper(localName = "GetModuleResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetModuleResponse")
    public Module getModule(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module);

    /**
     * 
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "FindModuleProject", action = "FindModuleProject")
    @WebResult(name = "FindModuleProjectResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "FindModuleProject", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.FindModuleProject")
    @ResponseWrapper(localName = "FindModuleProjectResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.FindModuleProjectResponse")
    public String findModuleProject(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module);

    /**
     * 
     * @param operations
     * @param repository
     * @param branch
     */
    @WebMethod(operationName = "ApplyOperations", action = "ApplyOperations")
    @RequestWrapper(localName = "ApplyOperations", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ApplyOperations")
    @ResponseWrapper(localName = "ApplyOperationsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ApplyOperationsResponse")
    public void applyOperations(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "operations", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        OperationSet operations);

    /**
     * 
     * @param expression
     * @param module
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ExpressionEvaluationResult
     */
    @WebMethod(operationName = "EvaluateExpression", action = "EvaluateExpression")
    @WebResult(name = "EvaluateExpressionResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "EvaluateExpression", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.EvaluateExpression")
    @ResponseWrapper(localName = "EvaluateExpressionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.EvaluateExpressionResponse")
    public ExpressionEvaluationResult evaluateExpression(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "expression", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String expression);

    /**
     * 
     * @param module
     * @param moduleElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfDependency
     */
    @WebMethod(operationName = "GetUsedByElementsForModuleElement", action = "GetUsedByElementsForModuleElement")
    @WebResult(name = "GetUsedByElementsForModuleElementResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetUsedByElementsForModuleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUsedByElementsForModuleElement")
    @ResponseWrapper(localName = "GetUsedByElementsForModuleElementResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUsedByElementsForModuleElementResponse")
    public ArrayOfDependency getUsedByElementsForModuleElement(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "moduleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleElementKey moduleElement);

    /**
     * 
     * @param globalElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfDependency
     */
    @WebMethod(operationName = "GetUsedByElementsForGlobalElement", action = "GetUsedByElementsForGlobalElement")
    @WebResult(name = "GetUsedByElementsForGlobalElementResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetUsedByElementsForGlobalElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUsedByElementsForGlobalElement")
    @ResponseWrapper(localName = "GetUsedByElementsForGlobalElementResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUsedByElementsForGlobalElementResponse")
    public ArrayOfDependency getUsedByElementsForGlobalElement(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "globalElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        GlobalElementKey globalElement);

    /**
     * 
     * @param module
     * @param moduleElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfDependency
     */
    @WebMethod(operationName = "GetUseElementsForModuleElement", action = "GetUseElementsForModuleElement")
    @WebResult(name = "GetUseElementsForModuleElementResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetUseElementsForModuleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUseElementsForModuleElement")
    @ResponseWrapper(localName = "GetUseElementsForModuleElementResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUseElementsForModuleElementResponse")
    public ArrayOfDependency getUseElementsForModuleElement(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "module", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleKey module,
        @WebParam(name = "moduleElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ModuleElementKey moduleElement);

    /**
     * 
     * @param globalElement
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfDependency
     */
    @WebMethod(operationName = "GetUseElementsForGlobalElement", action = "GetUseElementsForGlobalElement")
    @WebResult(name = "GetUseElementsForGlobalElementResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetUseElementsForGlobalElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUseElementsForGlobalElement")
    @ResponseWrapper(localName = "GetUseElementsForGlobalElementResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetUseElementsForGlobalElementResponse")
    public ArrayOfDependency getUseElementsForGlobalElement(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "globalElement", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        GlobalElementKey globalElement);

    /**
     * 
     * @param parameters
     * @return
     *     returns com.cet.managementservice.ArrayOfSearchResultItem
     */
    @WebMethod(operationName = "Search", action = "Search")
    @WebResult(name = "SearchResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "Search", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.Search")
    @ResponseWrapper(localName = "SearchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.SearchResponse")
    public ArrayOfSearchResultItem search(
        @WebParam(name = "parameters", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        SearchParameters parameters);

    /**
     * 
     * @param parameters
     * @return
     *     returns com.cet.managementservice.SearchIdentifier
     */
    @WebMethod(operationName = "StartAdvancedSearch", action = "StartAdvancedSearch")
    @WebResult(name = "StartAdvancedSearchResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "StartAdvancedSearch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.StartAdvancedSearch")
    @ResponseWrapper(localName = "StartAdvancedSearchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.StartAdvancedSearchResponse")
    public SearchIdentifier startAdvancedSearch(
        @WebParam(name = "parameters", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        AdvancedSearchParameters parameters);

    /**
     * 
     * @param searchId
     */
    @WebMethod(operationName = "StopAdvancedSearch", action = "StopAdvancedSearch")
    @RequestWrapper(localName = "StopAdvancedSearch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.StopAdvancedSearch")
    @ResponseWrapper(localName = "StopAdvancedSearchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.StopAdvancedSearchResponse")
    public void stopAdvancedSearch(
        @WebParam(name = "searchId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        SearchIdentifier searchId);

    /**
     * 
     * @param searchId
     * @return
     *     returns com.cet.managementservice.AdvancedSearchResults
     */
    @WebMethod(operationName = "GetAdvancedSearchResults", action = "GetAdvancedSearchResults")
    @WebResult(name = "GetAdvancedSearchResultsResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetAdvancedSearchResults", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetAdvancedSearchResults")
    @ResponseWrapper(localName = "GetAdvancedSearchResultsResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetAdvancedSearchResultsResponse")
    public AdvancedSearchResults getAdvancedSearchResults(
        @WebParam(name = "searchId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        SearchIdentifier searchId);

    /**
     * 
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.ArrayOfLibrarySearchResult
     */
    @WebMethod(operationName = "GetLibraries", action = "GetLibraries")
    @WebResult(name = "GetLibrariesResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetLibraries", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetLibraries")
    @ResponseWrapper(localName = "GetLibrariesResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetLibrariesResponse")
    public ArrayOfLibrarySearchResult getLibraries(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch);

    /**
     * 
     * @param encrypt
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.StudioExport
     */
    @WebMethod(operationName = "ExportProject", action = "ExportProject")
    @WebResult(name = "ExportProjectResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportProject", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProject")
    @ResponseWrapper(localName = "ExportProjectResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProjectResponse")
    public StudioExport exportProject(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "encrypt", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean encrypt);

    /**
     * 
     * @param revisionId
     * @param encrypt
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.StudioExport
     */
    @WebMethod(operationName = "ExportProjectRevision", action = "ExportProjectRevision")
    @WebResult(name = "ExportProjectRevisionResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportProjectRevision", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProjectRevision")
    @ResponseWrapper(localName = "ExportProjectRevisionResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProjectRevisionResponse")
    public StudioExport exportProjectRevision(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "encrypt", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean encrypt);

    /**
     * 
     * @param encrypt
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.StudioExportWithMetadata
     */
    @WebMethod(operationName = "ExportProjectWithMetadata", action = "ExportProjectWithMetadata")
    @WebResult(name = "ExportProjectWithMetadataResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportProjectWithMetadata", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProjectWithMetadata")
    @ResponseWrapper(localName = "ExportProjectWithMetadataResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProjectWithMetadataResponse")
    public StudioExportWithMetadata exportProjectWithMetadata(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "encrypt", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean encrypt);

    /**
     * 
     * @param revisionId
     * @param encrypt
     * @param project
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.StudioExportWithMetadata
     */
    @WebMethod(operationName = "ExportProjectRevisionWithMetadata", action = "ExportProjectRevisionWithMetadata")
    @WebResult(name = "ExportProjectRevisionWithMetadataResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportProjectRevisionWithMetadata", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProjectRevisionWithMetadata")
    @ResponseWrapper(localName = "ExportProjectRevisionWithMetadataResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportProjectRevisionWithMetadataResponse")
    public StudioExportWithMetadata exportProjectRevisionWithMetadata(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "revisionId", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String revisionId,
        @WebParam(name = "project", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String project,
        @WebParam(name = "encrypt", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean encrypt);

    /**
     * 
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.StudioExport
     */
    @WebMethod(operationName = "ExportBranch", action = "ExportBranch")
    @WebResult(name = "ExportBranchResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportBranch")
    @ResponseWrapper(localName = "ExportBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportBranchResponse")
    public StudioExport exportBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch);

    /**
     * 
     * @param library
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.StudioExport
     */
    @WebMethod(operationName = "ExportLibrary", action = "ExportLibrary")
    @WebResult(name = "ExportLibraryResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportLibrary", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportLibrary")
    @ResponseWrapper(localName = "ExportLibraryResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportLibraryResponse")
    public StudioExport exportLibrary(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "library", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String library);

    /**
     * 
     * @param packageName
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.StudioExport
     */
    @WebMethod(operationName = "ExportPackage", action = "ExportPackage")
    @WebResult(name = "ExportPackageResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ExportPackage", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportPackage")
    @ResponseWrapper(localName = "ExportPackageResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ExportPackageResponse")
    public StudioExport exportPackage(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "packageName", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String packageName);

    /**
     * 
     * @param data
     * @param deleteUnknownElements
     * @param repository
     * @param branch
     */
    @WebMethod(operationName = "ImportBranch", action = "ImportBranch")
    @RequestWrapper(localName = "ImportBranch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ImportBranch")
    @ResponseWrapper(localName = "ImportBranchResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ImportBranchResponse")
    public void importBranch(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "data", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String data,
        @WebParam(name = "deleteUnknownElements", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        boolean deleteUnknownElements);

    /**
     * 
     * @param base64String
     * @param arguments
     * @param repository
     * @param branch
     */
    @WebMethod(operationName = "ImportLibrary", action = "ImportLibrary")
    @RequestWrapper(localName = "ImportLibrary", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ImportLibrary")
    @ResponseWrapper(localName = "ImportLibraryResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ImportLibraryResponse")
    public void importLibrary(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "arguments", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        ProjectImportArguments arguments,
        @WebParam(name = "base64String", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String base64String);

    /**
     * 
     * @param base64String
     * @param repository
     * @param branch
     * @return
     *     returns com.cet.managementservice.PackageMetadata
     */
    @WebMethod(operationName = "ReadLibraryMetadata", action = "ReadLibraryMetadata")
    @WebResult(name = "ReadLibraryMetadataResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "ReadLibraryMetadata", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ReadLibraryMetadata")
    @ResponseWrapper(localName = "ReadLibraryMetadataResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.ReadLibraryMetadataResponse")
    public PackageMetadata readLibraryMetadata(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository,
        @WebParam(name = "branch", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String branch,
        @WebParam(name = "base64String", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String base64String);

    /**
     * 
     * @return
     *     returns com.cet.managementservice.ArrayOfString
     */
    @WebMethod(operationName = "GetRepositories", action = "GetRepositories")
    @WebResult(name = "GetRepositoriesResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetRepositories", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRepositories")
    @ResponseWrapper(localName = "GetRepositoriesResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRepositoriesResponse")
    public ArrayOfString getRepositories();

    /**
     * 
     * @param repository
     * @return
     *     returns com.cet.managementservice.Repository
     */
    @WebMethod(operationName = "GetRepository", action = "GetRepository")
    @WebResult(name = "GetRepositoryResult", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
    @RequestWrapper(localName = "GetRepository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRepository")
    @ResponseWrapper(localName = "GetRepositoryResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.GetRepositoryResponse")
    public Repository getRepository(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository);

    /**
     * 
     * @param repository
     */
    @WebMethod(operationName = "CreateRepository", action = "CreateRepository")
    @RequestWrapper(localName = "CreateRepository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateRepository")
    @ResponseWrapper(localName = "CreateRepositoryResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.CreateRepositoryResponse")
    public void createRepository(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        Repository repository);

    /**
     * 
     * @param originalName
     * @param repository
     */
    @WebMethod(operationName = "UpdateRepository", action = "UpdateRepository")
    @RequestWrapper(localName = "UpdateRepository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.UpdateRepository")
    @ResponseWrapper(localName = "UpdateRepositoryResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.UpdateRepositoryResponse")
    public void updateRepository(
        @WebParam(name = "originalName", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String originalName,
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        Repository repository);

    /**
     * 
     * @param repository
     */
    @WebMethod(operationName = "DeleteRepository", action = "DeleteRepository")
    @RequestWrapper(localName = "DeleteRepository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.DeleteRepository")
    @ResponseWrapper(localName = "DeleteRepositoryResponse", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", className = "com.cet.managementservice.DeleteRepositoryResponse")
    public void deleteRepository(
        @WebParam(name = "repository", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0")
        String repository);

}
