
package com.cet.managementservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "ManagementService", targetNamespace = "http://www.everest.nl/aquima/studio/ManagementService/1.0", wsdlLocation = "file:/home/ansar/blueriq/cet/cet/new_backend/cet/src/main/resources/managementservice.wsdl")
public class ManagementService_Service
    extends Service
{

    private final static URL MANAGEMENTSERVICE_WSDL_LOCATION;
    private final static WebServiceException MANAGEMENTSERVICE_EXCEPTION;
    private final static QName MANAGEMENTSERVICE_QNAME = new QName("http://www.everest.nl/aquima/studio/ManagementService/1.0", "ManagementService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/ansar/blueriq/cet/cet/new_backend/cet/src/main/resources/managementservice.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MANAGEMENTSERVICE_WSDL_LOCATION = url;
        MANAGEMENTSERVICE_EXCEPTION = e;
    }

    public ManagementService_Service() {
        super(__getWsdlLocation(), MANAGEMENTSERVICE_QNAME);
    }

    public ManagementService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), MANAGEMENTSERVICE_QNAME, features);
    }

    public ManagementService_Service(URL wsdlLocation) {
        super(wsdlLocation, MANAGEMENTSERVICE_QNAME);
    }

    public ManagementService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MANAGEMENTSERVICE_QNAME, features);
    }

    public ManagementService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ManagementService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ManagementService
     */
    @WebEndpoint(name = "BasicHttpBinding_ManagementService")
    public ManagementService getBasicHttpBindingManagementService() {
        return super.getPort(new QName("http://www.everest.nl/aquima/studio/ManagementService/1.0", "BasicHttpBinding_ManagementService"), ManagementService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ManagementService
     */
    @WebEndpoint(name = "BasicHttpBinding_ManagementService")
    public ManagementService getBasicHttpBindingManagementService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.everest.nl/aquima/studio/ManagementService/1.0", "BasicHttpBinding_ManagementService"), ManagementService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MANAGEMENTSERVICE_EXCEPTION!= null) {
            throw MANAGEMENTSERVICE_EXCEPTION;
        }
        return MANAGEMENTSERVICE_WSDL_LOCATION;
    }

}
